// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// V1AuthLogoutPost implements POST /v1/auth/logout operation.
//
// Terminates the user session.
//
// POST /v1/auth/logout
func (UnimplementedHandler) V1AuthLogoutPost(ctx context.Context, params V1AuthLogoutPostParams) (r V1AuthLogoutPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1AuthRefreshPost implements POST /v1/auth/refresh operation.
//
// Get new access token.
//
// POST /v1/auth/refresh
func (UnimplementedHandler) V1AuthRefreshPost(ctx context.Context, params V1AuthRefreshPostParams) (r V1AuthRefreshPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1AuthSigninPost implements POST /v1/auth/signin operation.
//
// Signin User.
//
// POST /v1/auth/signin
func (UnimplementedHandler) V1AuthSigninPost(ctx context.Context, req *V1AuthSigninPostReq) (r V1AuthSigninPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1AuthSignupPost implements POST /v1/auth/signup operation.
//
// Signup User.
//
// POST /v1/auth/signup
func (UnimplementedHandler) V1AuthSignupPost(ctx context.Context, req *V1AuthSignupPostReq) (r V1AuthSignupPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1AuthUserGet implements GET /v1/auth/user operation.
//
// Get currently authenticated user.
//
// GET /v1/auth/user
func (UnimplementedHandler) V1AuthUserGet(ctx context.Context) (r V1AuthUserGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1CatalogCitiesPost implements POST /v1/catalog/cities operation.
//
// Adds city to catalog
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Admin' or higher.
//
// POST /v1/catalog/cities
func (UnimplementedHandler) V1CatalogCitiesPost(ctx context.Context, req *V1CatalogCitiesPostReq) (r V1CatalogCitiesPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1CatalogObjectsGet implements GET /v1/catalog/objects operation.
//
// Lists all available objects.
//
// GET /v1/catalog/objects
func (UnimplementedHandler) V1CatalogObjectsGet(ctx context.Context, params V1CatalogObjectsGetParams) (r V1CatalogObjectsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1CatalogObjectsPost implements POST /v1/catalog/objects operation.
//
// Creates catalog object
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Admin' or higher.
//
// POST /v1/catalog/objects
func (UnimplementedHandler) V1CatalogObjectsPost(ctx context.Context, req *V1CatalogObjectsPostReq) (r V1CatalogObjectsPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1CatalogRegionsPost implements POST /v1/catalog/regions operation.
//
// Adds region to catalog
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Admin' or higher.
//
// POST /v1/catalog/regions
func (UnimplementedHandler) V1CatalogRegionsPost(ctx context.Context, req *V1CatalogRegionsPostReq) (r V1CatalogRegionsPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1CatalogServicesGet implements GET /v1/catalog/services operation.
//
// Lists all available services.
//
// GET /v1/catalog/services
func (UnimplementedHandler) V1CatalogServicesGet(ctx context.Context, params V1CatalogServicesGetParams) (r V1CatalogServicesGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1CatalogServicesPost implements POST /v1/catalog/services operation.
//
// Creates catalog service
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Admin' or higher.
//
// POST /v1/catalog/services
func (UnimplementedHandler) V1CatalogServicesPost(ctx context.Context, req *V1CatalogServicesPostReq) (r V1CatalogServicesPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1CommentsVerificationsGet implements GET /v1/comments/verifications operation.
//
// Get all verifications requests
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// GET /v1/comments/verifications
func (UnimplementedHandler) V1CommentsVerificationsGet(ctx context.Context, params V1CommentsVerificationsGetParams) (r V1CommentsVerificationsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1EmployeePost implements POST /v1/employee operation.
//
// Create employee user.
//
// POST /v1/employee
func (UnimplementedHandler) V1EmployeePost(ctx context.Context, req *V1EmployeePostReq) (r V1EmployeePostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1OrganizationsContractorsGet implements GET /v1/organizations/contractors operation.
//
// Получить всех исполнителей (verifed=true, banned=false).
//
// GET /v1/organizations/contractors
func (UnimplementedHandler) V1OrganizationsContractorsGet(ctx context.Context, params V1OrganizationsContractorsGetParams) (r V1OrganizationsContractorsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1OrganizationsGet implements GET /v1/organizations operation.
//
// List all organizations
// Для получения всех организаций (включая
// неверифицированные)
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// GET /v1/organizations
func (UnimplementedHandler) V1OrganizationsGet(ctx context.Context, params V1OrganizationsGetParams) (r V1OrganizationsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1OrganizationsOrganizationIDGet implements GET /v1/organizations/{organizationID} operation.
//
// Returns organization by id.
//
// GET /v1/organizations/{organizationID}
func (UnimplementedHandler) V1OrganizationsOrganizationIDGet(ctx context.Context, params V1OrganizationsOrganizationIDGetParams) (r V1OrganizationsOrganizationIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1OrganizationsOrganizationIDTendersGet implements GET /v1/organizations/{organizationID}/tenders operation.
//
// If user is in organization it also returns all drafts.
//
// GET /v1/organizations/{organizationID}/tenders
func (UnimplementedHandler) V1OrganizationsOrganizationIDTendersGet(ctx context.Context, params V1OrganizationsOrganizationIDTendersGetParams) (r V1OrganizationsOrganizationIDTendersGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1OrganizationsOrganizationIDVerificationsGet implements GET /v1/organizations/{organizationID}/verifications operation.
//
// Get organization verification history.
//
// GET /v1/organizations/{organizationID}/verifications
func (UnimplementedHandler) V1OrganizationsOrganizationIDVerificationsGet(ctx context.Context, params V1OrganizationsOrganizationIDVerificationsGetParams) (r V1OrganizationsOrganizationIDVerificationsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1OrganizationsOrganizationIDVerificationsPost implements POST /v1/organizations/{organizationID}/verifications operation.
//
// Ask verify organization.
//
// POST /v1/organizations/{organizationID}/verifications
func (UnimplementedHandler) V1OrganizationsOrganizationIDVerificationsPost(ctx context.Context, req *V1OrganizationsOrganizationIDVerificationsPostReq, params V1OrganizationsOrganizationIDVerificationsPostParams) (r V1OrganizationsOrganizationIDVerificationsPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1OrganizationsVerificationsGet implements GET /v1/organizations/verifications operation.
//
// Get verifications
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// GET /v1/organizations/verifications
func (UnimplementedHandler) V1OrganizationsVerificationsGet(ctx context.Context, params V1OrganizationsVerificationsGetParams) (r V1OrganizationsVerificationsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1QuestionnaireGet implements GET /v1/questionnaire operation.
//
// Get all contractor's questionnaire answers with pagination
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// GET /v1/questionnaire
func (UnimplementedHandler) V1QuestionnaireGet(ctx context.Context, params V1QuestionnaireGetParams) (r V1QuestionnaireGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1QuestionnairePost implements POST /v1/questionnaire operation.
//
// Save the contractor's answers to the questionnaire.
//
// POST /v1/questionnaire
func (UnimplementedHandler) V1QuestionnairePost(ctx context.Context, req *V1QuestionnairePostReq) (r V1QuestionnairePostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1SuggestCityGet implements GET /v1/suggest/city operation.
//
// Suggests a city with provided city name.
//
// GET /v1/suggest/city
func (UnimplementedHandler) V1SuggestCityGet(ctx context.Context, params V1SuggestCityGetParams) (r V1SuggestCityGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1SuggestCompanyGet implements GET /v1/suggest/company operation.
//
// Suggests a company with provided INN.
//
// GET /v1/suggest/company
func (UnimplementedHandler) V1SuggestCompanyGet(ctx context.Context, params V1SuggestCompanyGetParams) (r V1SuggestCompanyGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1SurveyPost implements POST /v1/survey operation.
//
// Respond to a survey.
//
// POST /v1/survey
func (UnimplementedHandler) V1SurveyPost(ctx context.Context, req *V1SurveyPostReq) (r V1SurveyPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1TendersGet implements GET /v1/tenders operation.
//
// Returns all tenders
// Для получения всех тендеров (включая
// неверифицированные)
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// GET /v1/tenders
func (UnimplementedHandler) V1TendersGet(ctx context.Context, params V1TendersGetParams) (r V1TendersGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1TendersPost implements POST /v1/tenders operation.
//
// Creates a new tender.
//
// POST /v1/tenders
func (UnimplementedHandler) V1TendersPost(ctx context.Context, req *V1TendersPostReq) (r V1TendersPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1TendersTenderIDCommentsGet implements GET /v1/tenders/{tenderID}/comments operation.
//
// Get comments under tender.
//
// GET /v1/tenders/{tenderID}/comments
func (UnimplementedHandler) V1TendersTenderIDCommentsGet(ctx context.Context, params V1TendersTenderIDCommentsGetParams) (r V1TendersTenderIDCommentsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1TendersTenderIDCommentsPost implements POST /v1/tenders/{tenderID}/comments operation.
//
// Leaves comment under tender.
//
// POST /v1/tenders/{tenderID}/comments
func (UnimplementedHandler) V1TendersTenderIDCommentsPost(ctx context.Context, req *V1TendersTenderIDCommentsPostReq, params V1TendersTenderIDCommentsPostParams) (r V1TendersTenderIDCommentsPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1TendersTenderIDGet implements GET /v1/tenders/{tenderID} operation.
//
// Returns tender by id
// Для получения неверифицированного тендера
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// GET /v1/tenders/{tenderID}
func (UnimplementedHandler) V1TendersTenderIDGet(ctx context.Context, params V1TendersTenderIDGetParams) (r V1TendersTenderIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1TendersTenderIDPut implements PUT /v1/tenders/{tenderID} operation.
//
// Update tender by id.
//
// PUT /v1/tenders/{tenderID}
func (UnimplementedHandler) V1TendersTenderIDPut(ctx context.Context, req *V1TendersTenderIDPutReq, params V1TendersTenderIDPutParams) (r V1TendersTenderIDPutRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1TendersTenderIDRespondPost implements POST /v1/tenders/{tenderID}/respond operation.
//
// Responds to a tender.
//
// POST /v1/tenders/{tenderID}/respond
func (UnimplementedHandler) V1TendersTenderIDRespondPost(ctx context.Context, req *V1TendersTenderIDRespondPostReq, params V1TendersTenderIDRespondPostParams) (r V1TendersTenderIDRespondPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1TendersVerificationsGet implements GET /v1/tenders/verifications operation.
//
// Get verifications
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// GET /v1/tenders/verifications
func (UnimplementedHandler) V1TendersVerificationsGet(ctx context.Context, params V1TendersVerificationsGetParams) (r V1TendersVerificationsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1UsersConfirmEmailPost implements POST /v1/users/confirm/email operation.
//
// Confirm email use a code from mail.
//
// POST /v1/users/confirm/email
func (UnimplementedHandler) V1UsersConfirmEmailPost(ctx context.Context, req *V1UsersConfirmEmailPostReq) (r V1UsersConfirmEmailPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1UsersConfirmPasswordPost implements POST /v1/users/confirm/password operation.
//
// Confirm reset password use a code from mail.
//
// POST /v1/users/confirm/password
func (UnimplementedHandler) V1UsersConfirmPasswordPost(ctx context.Context, req *V1UsersConfirmPasswordPostReq) (r V1UsersConfirmPasswordPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1UsersGet implements GET /v1/users operation.
//
// Returns all users
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// GET /v1/users
func (UnimplementedHandler) V1UsersGet(ctx context.Context, params V1UsersGetParams) (r V1UsersGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1UsersRequestEmailVerificationPost implements POST /v1/users/request/email-verification operation.
//
// Requesting send verify code.
//
// POST /v1/users/request/email-verification
func (UnimplementedHandler) V1UsersRequestEmailVerificationPost(ctx context.Context, req *V1UsersRequestEmailVerificationPostReq) (r V1UsersRequestEmailVerificationPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1UsersRequestResetPasswordPost implements POST /v1/users/request/reset-password operation.
//
// Requesting send reset code.
//
// POST /v1/users/request/reset-password
func (UnimplementedHandler) V1UsersRequestResetPasswordPost(ctx context.Context, req *V1UsersRequestResetPasswordPostReq) (r V1UsersRequestResetPasswordPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1UsersUserIDGet implements GET /v1/users/{userID} operation.
//
// Returns user by id
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// GET /v1/users/{userID}
func (UnimplementedHandler) V1UsersUserIDGet(ctx context.Context, params V1UsersUserIDGetParams) (r V1UsersUserIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1VerificationsRequestIDAprovePost implements POST /v1/verifications/{requestID}/aprove operation.
//
// Aproving verification
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// POST /v1/verifications/{requestID}/aprove
func (UnimplementedHandler) V1VerificationsRequestIDAprovePost(ctx context.Context, params V1VerificationsRequestIDAprovePostParams) (r V1VerificationsRequestIDAprovePostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1VerificationsRequestIDDenyPost implements POST /v1/verifications/{requestID}/deny operation.
//
// Denying verification
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// POST /v1/verifications/{requestID}/deny
func (UnimplementedHandler) V1VerificationsRequestIDDenyPost(ctx context.Context, params V1VerificationsRequestIDDenyPostParams) (r V1VerificationsRequestIDDenyPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// V1VerificationsRequestIDGet implements GET /v1/verifications/{requestID} operation.
//
// Returns verification request by id
// **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
// 'Employee' or higher.
//
// GET /v1/verifications/{requestID}
func (UnimplementedHandler) V1VerificationsRequestIDGet(ctx context.Context, params V1VerificationsRequestIDGetParams) (r V1VerificationsRequestIDGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

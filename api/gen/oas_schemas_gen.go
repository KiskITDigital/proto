// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

// Ref: #
type Attachment struct {
	// Название элемента.
	Name OptString `json:"name"`
	URL  URL       `json:"url"`
}

// GetName returns the value of Name.
func (s *Attachment) GetName() OptString {
	return s.Name
}

// GetURL returns the value of URL.
func (s *Attachment) GetURL() URL {
	return s.URL
}

// SetName sets the value of Name.
func (s *Attachment) SetName(val OptString) {
	s.Name = val
}

// SetURL sets the value of URL.
func (s *Attachment) SetURL(val URL) {
	s.URL = val
}

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// Ref: #
type City struct {
	ID     int       `json:"id"`
	Name   string    `json:"name"`
	Region OptRegion `json:"region"`
}

// GetID returns the value of ID.
func (s *City) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *City) GetName() string {
	return s.Name
}

// GetRegion returns the value of Region.
func (s *City) GetRegion() OptRegion {
	return s.Region
}

// SetID sets the value of ID.
func (s *City) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *City) SetName(val string) {
	s.Name = val
}

// SetRegion sets the value of Region.
func (s *City) SetRegion(val OptRegion) {
	s.Region = val
}

// Ref: #
type Comment struct {
	ID                 int          `json:"id"`
	Organization       Organization `json:"organization"`
	Title              string       `json:"title"`
	Content            string       `json:"content"`
	Attachments        []string     `json:"attachments"`
	VerificationStatus string       `json:"verification_status"`
	CreatedAt          time.Time    `json:"created_at"`
}

// GetID returns the value of ID.
func (s *Comment) GetID() int {
	return s.ID
}

// GetOrganization returns the value of Organization.
func (s *Comment) GetOrganization() Organization {
	return s.Organization
}

// GetTitle returns the value of Title.
func (s *Comment) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *Comment) GetContent() string {
	return s.Content
}

// GetAttachments returns the value of Attachments.
func (s *Comment) GetAttachments() []string {
	return s.Attachments
}

// GetVerificationStatus returns the value of VerificationStatus.
func (s *Comment) GetVerificationStatus() string {
	return s.VerificationStatus
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Comment) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *Comment) SetID(val int) {
	s.ID = val
}

// SetOrganization sets the value of Organization.
func (s *Comment) SetOrganization(val Organization) {
	s.Organization = val
}

// SetTitle sets the value of Title.
func (s *Comment) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *Comment) SetContent(val string) {
	s.Content = val
}

// SetAttachments sets the value of Attachments.
func (s *Comment) SetAttachments(val []string) {
	s.Attachments = val
}

// SetVerificationStatus sets the value of VerificationStatus.
func (s *Comment) SetVerificationStatus(val string) {
	s.VerificationStatus = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Comment) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #
type ContactInfo struct {
	Contact string `json:"contact"`
	Info    string `json:"info"`
}

// GetContact returns the value of Contact.
func (s *ContactInfo) GetContact() string {
	return s.Contact
}

// GetInfo returns the value of Info.
func (s *ContactInfo) GetInfo() string {
	return s.Info
}

// SetContact sets the value of Contact.
func (s *ContactInfo) SetContact(val string) {
	s.Contact = val
}

// SetInfo sets the value of Info.
func (s *ContactInfo) SetInfo(val string) {
	s.Info = val
}

// Ref: #
type ContractorInfo struct {
	Description OptDescription `json:"description"`
	// Локации заказчика.
	Cities   []City   `json:"cities"`
	Services Services `json:"services"`
	Objects  Objects  `json:"objects"`
}

// GetDescription returns the value of Description.
func (s *ContractorInfo) GetDescription() OptDescription {
	return s.Description
}

// GetCities returns the value of Cities.
func (s *ContractorInfo) GetCities() []City {
	return s.Cities
}

// GetServices returns the value of Services.
func (s *ContractorInfo) GetServices() Services {
	return s.Services
}

// GetObjects returns the value of Objects.
func (s *ContractorInfo) GetObjects() Objects {
	return s.Objects
}

// SetDescription sets the value of Description.
func (s *ContractorInfo) SetDescription(val OptDescription) {
	s.Description = val
}

// SetCities sets the value of Cities.
func (s *ContractorInfo) SetCities(val []City) {
	s.Cities = val
}

// SetServices sets the value of Services.
func (s *ContractorInfo) SetServices(val Services) {
	s.Services = val
}

// SetObjects sets the value of Objects.
func (s *ContractorInfo) SetObjects(val Objects) {
	s.Objects = val
}

type CookieAuth struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *CookieAuth) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *CookieAuth) SetAPIKey(val string) {
	s.APIKey = val
}

// Ref: #
type CustomerInfo struct {
	Description OptDescription `json:"description"`
	// Локации заказчика.
	Cities []City `json:"cities"`
}

// GetDescription returns the value of Description.
func (s *CustomerInfo) GetDescription() OptDescription {
	return s.Description
}

// GetCities returns the value of Cities.
func (s *CustomerInfo) GetCities() []City {
	return s.Cities
}

// SetDescription sets the value of Description.
func (s *CustomerInfo) SetDescription(val OptDescription) {
	s.Description = val
}

// SetCities sets the value of Cities.
func (s *CustomerInfo) SetCities(val []City) {
	s.Cities = val
}

type Description string

type Email string

// Merged schema.
// Ref: #
type EmployeeUser struct {
	ID            int       `json:"id"`
	Email         Email     `json:"email"`
	Phone         Phone     `json:"phone"`
	FirstName     Name      `json:"first_name"`
	LastName      Name      `json:"last_name"`
	MiddleName    OptName   `json:"middle_name"`
	AvatarURL     OptURL    `json:"avatar_url"`
	EmailVerified bool      `json:"email_verified"`
	IsBanned      bool      `json:"is_banned"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
	Position      string    `json:"position"`
	Role          Role      `json:"role"`
}

// GetID returns the value of ID.
func (s *EmployeeUser) GetID() int {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *EmployeeUser) GetEmail() Email {
	return s.Email
}

// GetPhone returns the value of Phone.
func (s *EmployeeUser) GetPhone() Phone {
	return s.Phone
}

// GetFirstName returns the value of FirstName.
func (s *EmployeeUser) GetFirstName() Name {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *EmployeeUser) GetLastName() Name {
	return s.LastName
}

// GetMiddleName returns the value of MiddleName.
func (s *EmployeeUser) GetMiddleName() OptName {
	return s.MiddleName
}

// GetAvatarURL returns the value of AvatarURL.
func (s *EmployeeUser) GetAvatarURL() OptURL {
	return s.AvatarURL
}

// GetEmailVerified returns the value of EmailVerified.
func (s *EmployeeUser) GetEmailVerified() bool {
	return s.EmailVerified
}

// GetIsBanned returns the value of IsBanned.
func (s *EmployeeUser) GetIsBanned() bool {
	return s.IsBanned
}

// GetCreatedAt returns the value of CreatedAt.
func (s *EmployeeUser) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *EmployeeUser) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetPosition returns the value of Position.
func (s *EmployeeUser) GetPosition() string {
	return s.Position
}

// GetRole returns the value of Role.
func (s *EmployeeUser) GetRole() Role {
	return s.Role
}

// SetID sets the value of ID.
func (s *EmployeeUser) SetID(val int) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *EmployeeUser) SetEmail(val Email) {
	s.Email = val
}

// SetPhone sets the value of Phone.
func (s *EmployeeUser) SetPhone(val Phone) {
	s.Phone = val
}

// SetFirstName sets the value of FirstName.
func (s *EmployeeUser) SetFirstName(val Name) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *EmployeeUser) SetLastName(val Name) {
	s.LastName = val
}

// SetMiddleName sets the value of MiddleName.
func (s *EmployeeUser) SetMiddleName(val OptName) {
	s.MiddleName = val
}

// SetAvatarURL sets the value of AvatarURL.
func (s *EmployeeUser) SetAvatarURL(val OptURL) {
	s.AvatarURL = val
}

// SetEmailVerified sets the value of EmailVerified.
func (s *EmployeeUser) SetEmailVerified(val bool) {
	s.EmailVerified = val
}

// SetIsBanned sets the value of IsBanned.
func (s *EmployeeUser) SetIsBanned(val bool) {
	s.IsBanned = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *EmployeeUser) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *EmployeeUser) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetPosition sets the value of Position.
func (s *EmployeeUser) SetPosition(val string) {
	s.Position = val
}

// SetRole sets the value of Role.
func (s *EmployeeUser) SetRole(val Role) {
	s.Role = val
}

// Ref: #
type Error struct {
	// Application-specific error code.
	Code string `json:"code"`
	// Error message.
	Message string       `json:"message"`
	Details ErrorDetails `json:"details"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// GetDetails returns the value of Details.
func (s *Error) GetDetails() ErrorDetails {
	return s.Details
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// SetDetails sets the value of Details.
func (s *Error) SetDetails(val ErrorDetails) {
	s.Details = val
}

type ErrorDetails map[string]jx.Raw

func (s *ErrorDetails) init() ErrorDetails {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// ErrorStatusCode wraps WrappedError with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   WrappedError
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() WrappedError {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val WrappedError) {
	s.Response = val
}

func (*ErrorStatusCode) v1AuthLogoutPostRes()                                  {}
func (*ErrorStatusCode) v1AuthRefreshPostRes()                                 {}
func (*ErrorStatusCode) v1AuthSigninPostRes()                                  {}
func (*ErrorStatusCode) v1AuthSignupPostRes()                                  {}
func (*ErrorStatusCode) v1AuthUserGetRes()                                     {}
func (*ErrorStatusCode) v1CatalogCitiesPostRes()                               {}
func (*ErrorStatusCode) v1CatalogObjectsGetRes()                               {}
func (*ErrorStatusCode) v1CatalogObjectsPostRes()                              {}
func (*ErrorStatusCode) v1CatalogRegionsPostRes()                              {}
func (*ErrorStatusCode) v1CatalogServicesGetRes()                              {}
func (*ErrorStatusCode) v1CatalogServicesPostRes()                             {}
func (*ErrorStatusCode) v1CommentsVerificationsGetRes()                        {}
func (*ErrorStatusCode) v1EmployeePostRes()                                    {}
func (*ErrorStatusCode) v1OrganizationsContractorsGetRes()                     {}
func (*ErrorStatusCode) v1OrganizationsGetRes()                                {}
func (*ErrorStatusCode) v1OrganizationsOrganizationIDGetRes()                  {}
func (*ErrorStatusCode) v1OrganizationsOrganizationIDPortfolioGetRes()         {}
func (*ErrorStatusCode) v1OrganizationsOrganizationIDPortfolioPostRes()        {}
func (*ErrorStatusCode) v1OrganizationsOrganizationIDProfileBrandPutRes()      {}
func (*ErrorStatusCode) v1OrganizationsOrganizationIDProfileContactsPutRes()   {}
func (*ErrorStatusCode) v1OrganizationsOrganizationIDProfileContractorPutRes() {}
func (*ErrorStatusCode) v1OrganizationsOrganizationIDProfileCustomerPutRes()   {}
func (*ErrorStatusCode) v1OrganizationsOrganizationIDTendersGetRes()           {}
func (*ErrorStatusCode) v1OrganizationsOrganizationIDVerificationsGetRes()     {}
func (*ErrorStatusCode) v1OrganizationsOrganizationIDVerificationsPostRes()    {}
func (*ErrorStatusCode) v1OrganizationsPortfolioPortfolioIDDeleteRes()         {}
func (*ErrorStatusCode) v1OrganizationsPortfolioPortfolioIDPutRes()            {}
func (*ErrorStatusCode) v1OrganizationsVerificationsGetRes()                   {}
func (*ErrorStatusCode) v1QuestionnaireGetRes()                                {}
func (*ErrorStatusCode) v1QuestionnaireOrganizationIDPostRes()                 {}
func (*ErrorStatusCode) v1QuestionnaireOrganizationIDStatusGetRes()            {}
func (*ErrorStatusCode) v1SuggestCityGetRes()                                  {}
func (*ErrorStatusCode) v1SuggestCompanyGetRes()                               {}
func (*ErrorStatusCode) v1SurveyPostRes()                                      {}
func (*ErrorStatusCode) v1TendersGetRes()                                      {}
func (*ErrorStatusCode) v1TendersPostRes()                                     {}
func (*ErrorStatusCode) v1TendersTenderIDCommentsGetRes()                      {}
func (*ErrorStatusCode) v1TendersTenderIDCommentsPostRes()                     {}
func (*ErrorStatusCode) v1TendersTenderIDGetRes()                              {}
func (*ErrorStatusCode) v1TendersTenderIDPutRes()                              {}
func (*ErrorStatusCode) v1TendersTenderIDRespondPostRes()                      {}
func (*ErrorStatusCode) v1TendersVerificationsGetRes()                         {}
func (*ErrorStatusCode) v1UsersConfirmEmailPostRes()                           {}
func (*ErrorStatusCode) v1UsersConfirmPasswordPostRes()                        {}
func (*ErrorStatusCode) v1UsersGetRes()                                        {}
func (*ErrorStatusCode) v1UsersRequestEmailVerificationPostRes()               {}
func (*ErrorStatusCode) v1UsersRequestResetPasswordPostRes()                   {}
func (*ErrorStatusCode) v1UsersUserIDGetRes()                                  {}
func (*ErrorStatusCode) v1UsersUserIDPutRes()                                  {}
func (*ErrorStatusCode) v1VerificationsRequestIDAprovePostRes()                {}
func (*ErrorStatusCode) v1VerificationsRequestIDDenyPostRes()                  {}
func (*ErrorStatusCode) v1VerificationsRequestIDGetRes()                       {}

type Inn string

type Kpp string

type Name string

// Ref: #
type Object struct {
	ID       int    `json:"id"`
	ParentID OptInt `json:"parent_id"`
	Name     string `json:"name"`
}

// GetID returns the value of ID.
func (s *Object) GetID() int {
	return s.ID
}

// GetParentID returns the value of ParentID.
func (s *Object) GetParentID() OptInt {
	return s.ParentID
}

// GetName returns the value of Name.
func (s *Object) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *Object) SetID(val int) {
	s.ID = val
}

// SetParentID sets the value of ParentID.
func (s *Object) SetParentID(val OptInt) {
	s.ParentID = val
}

// SetName sets the value of Name.
func (s *Object) SetName(val string) {
	s.Name = val
}

// Ref: #
type ObjectType string

const (
	ObjectTypeInvalid      ObjectType = "invalid"
	ObjectTypeOrganization ObjectType = "organization"
	ObjectTypeComment      ObjectType = "comment"
	ObjectTypeTender       ObjectType = "tender"
)

// AllValues returns all ObjectType values.
func (ObjectType) AllValues() []ObjectType {
	return []ObjectType{
		ObjectTypeInvalid,
		ObjectTypeOrganization,
		ObjectTypeComment,
		ObjectTypeTender,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ObjectType) MarshalText() ([]byte, error) {
	switch s {
	case ObjectTypeInvalid:
		return []byte(s), nil
	case ObjectTypeOrganization:
		return []byte(s), nil
	case ObjectTypeComment:
		return []byte(s), nil
	case ObjectTypeTender:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ObjectType) UnmarshalText(data []byte) error {
	switch ObjectType(data) {
	case ObjectTypeInvalid:
		*s = ObjectTypeInvalid
		return nil
	case ObjectTypeOrganization:
		*s = ObjectTypeOrganization
		return nil
	case ObjectTypeComment:
		*s = ObjectTypeComment
		return nil
	case ObjectTypeTender:
		*s = ObjectTypeTender
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type Objects []Object

type Ogrn string

type Okpo string

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDescription returns new OptDescription with value set to v.
func NewOptDescription(v Description) OptDescription {
	return OptDescription{
		Value: v,
		Set:   true,
	}
}

// OptDescription is optional Description.
type OptDescription struct {
	Value Description
	Set   bool
}

// IsSet returns true if OptDescription was set.
func (o OptDescription) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDescription) Reset() {
	var v Description
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDescription) SetTo(v Description) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDescription) Get() (v Description, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDescription) Or(d Description) Description {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEmployeeUser returns new OptEmployeeUser with value set to v.
func NewOptEmployeeUser(v EmployeeUser) OptEmployeeUser {
	return OptEmployeeUser{
		Value: v,
		Set:   true,
	}
}

// OptEmployeeUser is optional EmployeeUser.
type OptEmployeeUser struct {
	Value EmployeeUser
	Set   bool
}

// IsSet returns true if OptEmployeeUser was set.
func (o OptEmployeeUser) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEmployeeUser) Reset() {
	var v EmployeeUser
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEmployeeUser) SetTo(v EmployeeUser) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEmployeeUser) Get() (v EmployeeUser, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEmployeeUser) Or(d EmployeeUser) EmployeeUser {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptName returns new OptName with value set to v.
func NewOptName(v Name) OptName {
	return OptName{
		Value: v,
		Set:   true,
	}
}

// OptName is optional Name.
type OptName struct {
	Value Name
	Set   bool
}

// IsSet returns true if OptName was set.
func (o OptName) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptName) Reset() {
	var v Name
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptName) SetTo(v Name) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptName) Get() (v Name, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptName) Or(d Name) Name {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptOrganization returns new OptOrganization with value set to v.
func NewOptOrganization(v Organization) OptOrganization {
	return OptOrganization{
		Value: v,
		Set:   true,
	}
}

// OptOrganization is optional Organization.
type OptOrganization struct {
	Value Organization
	Set   bool
}

// IsSet returns true if OptOrganization was set.
func (o OptOrganization) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptOrganization) Reset() {
	var v Organization
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptOrganization) SetTo(v Organization) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptOrganization) Get() (v Organization, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptOrganization) Or(d Organization) Organization {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhone returns new OptPhone with value set to v.
func NewOptPhone(v Phone) OptPhone {
	return OptPhone{
		Value: v,
		Set:   true,
	}
}

// OptPhone is optional Phone.
type OptPhone struct {
	Value Phone
	Set   bool
}

// IsSet returns true if OptPhone was set.
func (o OptPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhone) Reset() {
	var v Phone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhone) SetTo(v Phone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhone) Get() (v Phone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhone) Or(d Phone) Phone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRegion returns new OptRegion with value set to v.
func NewOptRegion(v Region) OptRegion {
	return OptRegion{
		Value: v,
		Set:   true,
	}
}

// OptRegion is optional Region.
type OptRegion struct {
	Value Region
	Set   bool
}

// IsSet returns true if OptRegion was set.
func (o OptRegion) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRegion) Reset() {
	var v Region
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRegion) SetTo(v Region) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRegion) Get() (v Region, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRegion) Or(d Region) Region {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURL returns new OptURL with value set to v.
func NewOptURL(v URL) OptURL {
	return OptURL{
		Value: v,
		Set:   true,
	}
}

// OptURL is optional URL.
type OptURL struct {
	Value URL
	Set   bool
}

// IsSet returns true if OptURL was set.
func (o OptURL) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURL) Reset() {
	var v URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURL) SetTo(v URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURL) Get() (v URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURL) Or(d URL) URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1CatalogObjectsGetDirection returns new OptV1CatalogObjectsGetDirection with value set to v.
func NewOptV1CatalogObjectsGetDirection(v V1CatalogObjectsGetDirection) OptV1CatalogObjectsGetDirection {
	return OptV1CatalogObjectsGetDirection{
		Value: v,
		Set:   true,
	}
}

// OptV1CatalogObjectsGetDirection is optional V1CatalogObjectsGetDirection.
type OptV1CatalogObjectsGetDirection struct {
	Value V1CatalogObjectsGetDirection
	Set   bool
}

// IsSet returns true if OptV1CatalogObjectsGetDirection was set.
func (o OptV1CatalogObjectsGetDirection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1CatalogObjectsGetDirection) Reset() {
	var v V1CatalogObjectsGetDirection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1CatalogObjectsGetDirection) SetTo(v V1CatalogObjectsGetDirection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1CatalogObjectsGetDirection) Get() (v V1CatalogObjectsGetDirection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1CatalogObjectsGetDirection) Or(d V1CatalogObjectsGetDirection) V1CatalogObjectsGetDirection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1CatalogObjectsGetSort returns new OptV1CatalogObjectsGetSort with value set to v.
func NewOptV1CatalogObjectsGetSort(v V1CatalogObjectsGetSort) OptV1CatalogObjectsGetSort {
	return OptV1CatalogObjectsGetSort{
		Value: v,
		Set:   true,
	}
}

// OptV1CatalogObjectsGetSort is optional V1CatalogObjectsGetSort.
type OptV1CatalogObjectsGetSort struct {
	Value V1CatalogObjectsGetSort
	Set   bool
}

// IsSet returns true if OptV1CatalogObjectsGetSort was set.
func (o OptV1CatalogObjectsGetSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1CatalogObjectsGetSort) Reset() {
	var v V1CatalogObjectsGetSort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1CatalogObjectsGetSort) SetTo(v V1CatalogObjectsGetSort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1CatalogObjectsGetSort) Get() (v V1CatalogObjectsGetSort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1CatalogObjectsGetSort) Or(d V1CatalogObjectsGetSort) V1CatalogObjectsGetSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1CatalogServicesGetDirection returns new OptV1CatalogServicesGetDirection with value set to v.
func NewOptV1CatalogServicesGetDirection(v V1CatalogServicesGetDirection) OptV1CatalogServicesGetDirection {
	return OptV1CatalogServicesGetDirection{
		Value: v,
		Set:   true,
	}
}

// OptV1CatalogServicesGetDirection is optional V1CatalogServicesGetDirection.
type OptV1CatalogServicesGetDirection struct {
	Value V1CatalogServicesGetDirection
	Set   bool
}

// IsSet returns true if OptV1CatalogServicesGetDirection was set.
func (o OptV1CatalogServicesGetDirection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1CatalogServicesGetDirection) Reset() {
	var v V1CatalogServicesGetDirection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1CatalogServicesGetDirection) SetTo(v V1CatalogServicesGetDirection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1CatalogServicesGetDirection) Get() (v V1CatalogServicesGetDirection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1CatalogServicesGetDirection) Or(d V1CatalogServicesGetDirection) V1CatalogServicesGetDirection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1CatalogServicesGetSort returns new OptV1CatalogServicesGetSort with value set to v.
func NewOptV1CatalogServicesGetSort(v V1CatalogServicesGetSort) OptV1CatalogServicesGetSort {
	return OptV1CatalogServicesGetSort{
		Value: v,
		Set:   true,
	}
}

// OptV1CatalogServicesGetSort is optional V1CatalogServicesGetSort.
type OptV1CatalogServicesGetSort struct {
	Value V1CatalogServicesGetSort
	Set   bool
}

// IsSet returns true if OptV1CatalogServicesGetSort was set.
func (o OptV1CatalogServicesGetSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1CatalogServicesGetSort) Reset() {
	var v V1CatalogServicesGetSort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1CatalogServicesGetSort) SetTo(v V1CatalogServicesGetSort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1CatalogServicesGetSort) Get() (v V1CatalogServicesGetSort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1CatalogServicesGetSort) Or(d V1CatalogServicesGetSort) V1CatalogServicesGetSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1CommentsVerificationsGetDirection returns new OptV1CommentsVerificationsGetDirection with value set to v.
func NewOptV1CommentsVerificationsGetDirection(v V1CommentsVerificationsGetDirection) OptV1CommentsVerificationsGetDirection {
	return OptV1CommentsVerificationsGetDirection{
		Value: v,
		Set:   true,
	}
}

// OptV1CommentsVerificationsGetDirection is optional V1CommentsVerificationsGetDirection.
type OptV1CommentsVerificationsGetDirection struct {
	Value V1CommentsVerificationsGetDirection
	Set   bool
}

// IsSet returns true if OptV1CommentsVerificationsGetDirection was set.
func (o OptV1CommentsVerificationsGetDirection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1CommentsVerificationsGetDirection) Reset() {
	var v V1CommentsVerificationsGetDirection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1CommentsVerificationsGetDirection) SetTo(v V1CommentsVerificationsGetDirection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1CommentsVerificationsGetDirection) Get() (v V1CommentsVerificationsGetDirection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1CommentsVerificationsGetDirection) Or(d V1CommentsVerificationsGetDirection) V1CommentsVerificationsGetDirection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1CommentsVerificationsGetSort returns new OptV1CommentsVerificationsGetSort with value set to v.
func NewOptV1CommentsVerificationsGetSort(v V1CommentsVerificationsGetSort) OptV1CommentsVerificationsGetSort {
	return OptV1CommentsVerificationsGetSort{
		Value: v,
		Set:   true,
	}
}

// OptV1CommentsVerificationsGetSort is optional V1CommentsVerificationsGetSort.
type OptV1CommentsVerificationsGetSort struct {
	Value V1CommentsVerificationsGetSort
	Set   bool
}

// IsSet returns true if OptV1CommentsVerificationsGetSort was set.
func (o OptV1CommentsVerificationsGetSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1CommentsVerificationsGetSort) Reset() {
	var v V1CommentsVerificationsGetSort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1CommentsVerificationsGetSort) SetTo(v V1CommentsVerificationsGetSort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1CommentsVerificationsGetSort) Get() (v V1CommentsVerificationsGetSort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1CommentsVerificationsGetSort) Or(d V1CommentsVerificationsGetSort) V1CommentsVerificationsGetSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1OrganizationsGetDirection returns new OptV1OrganizationsGetDirection with value set to v.
func NewOptV1OrganizationsGetDirection(v V1OrganizationsGetDirection) OptV1OrganizationsGetDirection {
	return OptV1OrganizationsGetDirection{
		Value: v,
		Set:   true,
	}
}

// OptV1OrganizationsGetDirection is optional V1OrganizationsGetDirection.
type OptV1OrganizationsGetDirection struct {
	Value V1OrganizationsGetDirection
	Set   bool
}

// IsSet returns true if OptV1OrganizationsGetDirection was set.
func (o OptV1OrganizationsGetDirection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1OrganizationsGetDirection) Reset() {
	var v V1OrganizationsGetDirection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1OrganizationsGetDirection) SetTo(v V1OrganizationsGetDirection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1OrganizationsGetDirection) Get() (v V1OrganizationsGetDirection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1OrganizationsGetDirection) Or(d V1OrganizationsGetDirection) V1OrganizationsGetDirection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1OrganizationsGetSort returns new OptV1OrganizationsGetSort with value set to v.
func NewOptV1OrganizationsGetSort(v V1OrganizationsGetSort) OptV1OrganizationsGetSort {
	return OptV1OrganizationsGetSort{
		Value: v,
		Set:   true,
	}
}

// OptV1OrganizationsGetSort is optional V1OrganizationsGetSort.
type OptV1OrganizationsGetSort struct {
	Value V1OrganizationsGetSort
	Set   bool
}

// IsSet returns true if OptV1OrganizationsGetSort was set.
func (o OptV1OrganizationsGetSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1OrganizationsGetSort) Reset() {
	var v V1OrganizationsGetSort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1OrganizationsGetSort) SetTo(v V1OrganizationsGetSort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1OrganizationsGetSort) Get() (v V1OrganizationsGetSort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1OrganizationsGetSort) Or(d V1OrganizationsGetSort) V1OrganizationsGetSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1OrganizationsVerificationsGetDirection returns new OptV1OrganizationsVerificationsGetDirection with value set to v.
func NewOptV1OrganizationsVerificationsGetDirection(v V1OrganizationsVerificationsGetDirection) OptV1OrganizationsVerificationsGetDirection {
	return OptV1OrganizationsVerificationsGetDirection{
		Value: v,
		Set:   true,
	}
}

// OptV1OrganizationsVerificationsGetDirection is optional V1OrganizationsVerificationsGetDirection.
type OptV1OrganizationsVerificationsGetDirection struct {
	Value V1OrganizationsVerificationsGetDirection
	Set   bool
}

// IsSet returns true if OptV1OrganizationsVerificationsGetDirection was set.
func (o OptV1OrganizationsVerificationsGetDirection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1OrganizationsVerificationsGetDirection) Reset() {
	var v V1OrganizationsVerificationsGetDirection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1OrganizationsVerificationsGetDirection) SetTo(v V1OrganizationsVerificationsGetDirection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1OrganizationsVerificationsGetDirection) Get() (v V1OrganizationsVerificationsGetDirection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1OrganizationsVerificationsGetDirection) Or(d V1OrganizationsVerificationsGetDirection) V1OrganizationsVerificationsGetDirection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1OrganizationsVerificationsGetSort returns new OptV1OrganizationsVerificationsGetSort with value set to v.
func NewOptV1OrganizationsVerificationsGetSort(v V1OrganizationsVerificationsGetSort) OptV1OrganizationsVerificationsGetSort {
	return OptV1OrganizationsVerificationsGetSort{
		Value: v,
		Set:   true,
	}
}

// OptV1OrganizationsVerificationsGetSort is optional V1OrganizationsVerificationsGetSort.
type OptV1OrganizationsVerificationsGetSort struct {
	Value V1OrganizationsVerificationsGetSort
	Set   bool
}

// IsSet returns true if OptV1OrganizationsVerificationsGetSort was set.
func (o OptV1OrganizationsVerificationsGetSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1OrganizationsVerificationsGetSort) Reset() {
	var v V1OrganizationsVerificationsGetSort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1OrganizationsVerificationsGetSort) SetTo(v V1OrganizationsVerificationsGetSort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1OrganizationsVerificationsGetSort) Get() (v V1OrganizationsVerificationsGetSort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1OrganizationsVerificationsGetSort) Or(d V1OrganizationsVerificationsGetSort) V1OrganizationsVerificationsGetSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1TendersGetDirection returns new OptV1TendersGetDirection with value set to v.
func NewOptV1TendersGetDirection(v V1TendersGetDirection) OptV1TendersGetDirection {
	return OptV1TendersGetDirection{
		Value: v,
		Set:   true,
	}
}

// OptV1TendersGetDirection is optional V1TendersGetDirection.
type OptV1TendersGetDirection struct {
	Value V1TendersGetDirection
	Set   bool
}

// IsSet returns true if OptV1TendersGetDirection was set.
func (o OptV1TendersGetDirection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1TendersGetDirection) Reset() {
	var v V1TendersGetDirection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1TendersGetDirection) SetTo(v V1TendersGetDirection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1TendersGetDirection) Get() (v V1TendersGetDirection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1TendersGetDirection) Or(d V1TendersGetDirection) V1TendersGetDirection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1TendersGetSort returns new OptV1TendersGetSort with value set to v.
func NewOptV1TendersGetSort(v V1TendersGetSort) OptV1TendersGetSort {
	return OptV1TendersGetSort{
		Value: v,
		Set:   true,
	}
}

// OptV1TendersGetSort is optional V1TendersGetSort.
type OptV1TendersGetSort struct {
	Value V1TendersGetSort
	Set   bool
}

// IsSet returns true if OptV1TendersGetSort was set.
func (o OptV1TendersGetSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1TendersGetSort) Reset() {
	var v V1TendersGetSort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1TendersGetSort) SetTo(v V1TendersGetSort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1TendersGetSort) Get() (v V1TendersGetSort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1TendersGetSort) Or(d V1TendersGetSort) V1TendersGetSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1TendersVerificationsGetDirection returns new OptV1TendersVerificationsGetDirection with value set to v.
func NewOptV1TendersVerificationsGetDirection(v V1TendersVerificationsGetDirection) OptV1TendersVerificationsGetDirection {
	return OptV1TendersVerificationsGetDirection{
		Value: v,
		Set:   true,
	}
}

// OptV1TendersVerificationsGetDirection is optional V1TendersVerificationsGetDirection.
type OptV1TendersVerificationsGetDirection struct {
	Value V1TendersVerificationsGetDirection
	Set   bool
}

// IsSet returns true if OptV1TendersVerificationsGetDirection was set.
func (o OptV1TendersVerificationsGetDirection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1TendersVerificationsGetDirection) Reset() {
	var v V1TendersVerificationsGetDirection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1TendersVerificationsGetDirection) SetTo(v V1TendersVerificationsGetDirection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1TendersVerificationsGetDirection) Get() (v V1TendersVerificationsGetDirection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1TendersVerificationsGetDirection) Or(d V1TendersVerificationsGetDirection) V1TendersVerificationsGetDirection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1TendersVerificationsGetSort returns new OptV1TendersVerificationsGetSort with value set to v.
func NewOptV1TendersVerificationsGetSort(v V1TendersVerificationsGetSort) OptV1TendersVerificationsGetSort {
	return OptV1TendersVerificationsGetSort{
		Value: v,
		Set:   true,
	}
}

// OptV1TendersVerificationsGetSort is optional V1TendersVerificationsGetSort.
type OptV1TendersVerificationsGetSort struct {
	Value V1TendersVerificationsGetSort
	Set   bool
}

// IsSet returns true if OptV1TendersVerificationsGetSort was set.
func (o OptV1TendersVerificationsGetSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1TendersVerificationsGetSort) Reset() {
	var v V1TendersVerificationsGetSort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1TendersVerificationsGetSort) SetTo(v V1TendersVerificationsGetSort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1TendersVerificationsGetSort) Get() (v V1TendersVerificationsGetSort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1TendersVerificationsGetSort) Or(d V1TendersVerificationsGetSort) V1TendersVerificationsGetSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1UsersGetDirection returns new OptV1UsersGetDirection with value set to v.
func NewOptV1UsersGetDirection(v V1UsersGetDirection) OptV1UsersGetDirection {
	return OptV1UsersGetDirection{
		Value: v,
		Set:   true,
	}
}

// OptV1UsersGetDirection is optional V1UsersGetDirection.
type OptV1UsersGetDirection struct {
	Value V1UsersGetDirection
	Set   bool
}

// IsSet returns true if OptV1UsersGetDirection was set.
func (o OptV1UsersGetDirection) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1UsersGetDirection) Reset() {
	var v V1UsersGetDirection
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1UsersGetDirection) SetTo(v V1UsersGetDirection) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1UsersGetDirection) Get() (v V1UsersGetDirection, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1UsersGetDirection) Or(d V1UsersGetDirection) V1UsersGetDirection {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptV1UsersGetSort returns new OptV1UsersGetSort with value set to v.
func NewOptV1UsersGetSort(v V1UsersGetSort) OptV1UsersGetSort {
	return OptV1UsersGetSort{
		Value: v,
		Set:   true,
	}
}

// OptV1UsersGetSort is optional V1UsersGetSort.
type OptV1UsersGetSort struct {
	Value V1UsersGetSort
	Set   bool
}

// IsSet returns true if OptV1UsersGetSort was set.
func (o OptV1UsersGetSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptV1UsersGetSort) Reset() {
	var v V1UsersGetSort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptV1UsersGetSort) SetTo(v V1UsersGetSort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptV1UsersGetSort) Get() (v V1UsersGetSort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptV1UsersGetSort) Or(d V1UsersGetSort) V1UsersGetSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptVerificationStatus returns new OptVerificationStatus with value set to v.
func NewOptVerificationStatus(v VerificationStatus) OptVerificationStatus {
	return OptVerificationStatus{
		Value: v,
		Set:   true,
	}
}

// OptVerificationStatus is optional VerificationStatus.
type OptVerificationStatus struct {
	Value VerificationStatus
	Set   bool
}

// IsSet returns true if OptVerificationStatus was set.
func (o OptVerificationStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptVerificationStatus) Reset() {
	var v VerificationStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptVerificationStatus) SetTo(v VerificationStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptVerificationStatus) Get() (v VerificationStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptVerificationStatus) Or(d VerificationStatus) VerificationStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #
type Organization struct {
	ID                 int                   `json:"id"`
	BrandName          Name                  `json:"brand_name"`
	FullName           Name                  `json:"full_name"`
	ShortName          Name                  `json:"short_name"`
	Inn                Inn                   `json:"inn"`
	Okpo               Okpo                  `json:"okpo"`
	Ogrn               Ogrn                  `json:"ogrn"`
	Kpp                Kpp                   `json:"kpp"`
	TaxCode            TaxCode               `json:"tax_code"`
	Address            string                `json:"address"`
	AvatarURL          OptURL                `json:"avatar_url"`
	Emails             []ContactInfo         `json:"emails"`
	Phones             []ContactInfo         `json:"phones"`
	Messengers         []ContactInfo         `json:"messengers"`
	VerificationStatus OptVerificationStatus `json:"verification_status"`
	IsContractor       bool                  `json:"is_contractor"`
	IsBanned           bool                  `json:"is_banned"`
	CustomerInfo       CustomerInfo          `json:"customer_info"`
	ContractorInfo     ContractorInfo        `json:"contractor_info"`
	CreatedAt          time.Time             `json:"created_at"`
	UpdatedAt          time.Time             `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *Organization) GetID() int {
	return s.ID
}

// GetBrandName returns the value of BrandName.
func (s *Organization) GetBrandName() Name {
	return s.BrandName
}

// GetFullName returns the value of FullName.
func (s *Organization) GetFullName() Name {
	return s.FullName
}

// GetShortName returns the value of ShortName.
func (s *Organization) GetShortName() Name {
	return s.ShortName
}

// GetInn returns the value of Inn.
func (s *Organization) GetInn() Inn {
	return s.Inn
}

// GetOkpo returns the value of Okpo.
func (s *Organization) GetOkpo() Okpo {
	return s.Okpo
}

// GetOgrn returns the value of Ogrn.
func (s *Organization) GetOgrn() Ogrn {
	return s.Ogrn
}

// GetKpp returns the value of Kpp.
func (s *Organization) GetKpp() Kpp {
	return s.Kpp
}

// GetTaxCode returns the value of TaxCode.
func (s *Organization) GetTaxCode() TaxCode {
	return s.TaxCode
}

// GetAddress returns the value of Address.
func (s *Organization) GetAddress() string {
	return s.Address
}

// GetAvatarURL returns the value of AvatarURL.
func (s *Organization) GetAvatarURL() OptURL {
	return s.AvatarURL
}

// GetEmails returns the value of Emails.
func (s *Organization) GetEmails() []ContactInfo {
	return s.Emails
}

// GetPhones returns the value of Phones.
func (s *Organization) GetPhones() []ContactInfo {
	return s.Phones
}

// GetMessengers returns the value of Messengers.
func (s *Organization) GetMessengers() []ContactInfo {
	return s.Messengers
}

// GetVerificationStatus returns the value of VerificationStatus.
func (s *Organization) GetVerificationStatus() OptVerificationStatus {
	return s.VerificationStatus
}

// GetIsContractor returns the value of IsContractor.
func (s *Organization) GetIsContractor() bool {
	return s.IsContractor
}

// GetIsBanned returns the value of IsBanned.
func (s *Organization) GetIsBanned() bool {
	return s.IsBanned
}

// GetCustomerInfo returns the value of CustomerInfo.
func (s *Organization) GetCustomerInfo() CustomerInfo {
	return s.CustomerInfo
}

// GetContractorInfo returns the value of ContractorInfo.
func (s *Organization) GetContractorInfo() ContractorInfo {
	return s.ContractorInfo
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Organization) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Organization) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Organization) SetID(val int) {
	s.ID = val
}

// SetBrandName sets the value of BrandName.
func (s *Organization) SetBrandName(val Name) {
	s.BrandName = val
}

// SetFullName sets the value of FullName.
func (s *Organization) SetFullName(val Name) {
	s.FullName = val
}

// SetShortName sets the value of ShortName.
func (s *Organization) SetShortName(val Name) {
	s.ShortName = val
}

// SetInn sets the value of Inn.
func (s *Organization) SetInn(val Inn) {
	s.Inn = val
}

// SetOkpo sets the value of Okpo.
func (s *Organization) SetOkpo(val Okpo) {
	s.Okpo = val
}

// SetOgrn sets the value of Ogrn.
func (s *Organization) SetOgrn(val Ogrn) {
	s.Ogrn = val
}

// SetKpp sets the value of Kpp.
func (s *Organization) SetKpp(val Kpp) {
	s.Kpp = val
}

// SetTaxCode sets the value of TaxCode.
func (s *Organization) SetTaxCode(val TaxCode) {
	s.TaxCode = val
}

// SetAddress sets the value of Address.
func (s *Organization) SetAddress(val string) {
	s.Address = val
}

// SetAvatarURL sets the value of AvatarURL.
func (s *Organization) SetAvatarURL(val OptURL) {
	s.AvatarURL = val
}

// SetEmails sets the value of Emails.
func (s *Organization) SetEmails(val []ContactInfo) {
	s.Emails = val
}

// SetPhones sets the value of Phones.
func (s *Organization) SetPhones(val []ContactInfo) {
	s.Phones = val
}

// SetMessengers sets the value of Messengers.
func (s *Organization) SetMessengers(val []ContactInfo) {
	s.Messengers = val
}

// SetVerificationStatus sets the value of VerificationStatus.
func (s *Organization) SetVerificationStatus(val OptVerificationStatus) {
	s.VerificationStatus = val
}

// SetIsContractor sets the value of IsContractor.
func (s *Organization) SetIsContractor(val bool) {
	s.IsContractor = val
}

// SetIsBanned sets the value of IsBanned.
func (s *Organization) SetIsBanned(val bool) {
	s.IsBanned = val
}

// SetCustomerInfo sets the value of CustomerInfo.
func (s *Organization) SetCustomerInfo(val CustomerInfo) {
	s.CustomerInfo = val
}

// SetContractorInfo sets the value of ContractorInfo.
func (s *Organization) SetContractorInfo(val ContractorInfo) {
	s.ContractorInfo = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Organization) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Organization) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type Password string

type Phone string

// Ref: #
type Portfolio struct {
	ID          int         `json:"id"`
	Name        Name        `json:"name"`
	Description Description `json:"description"`
	Attachments []URL       `json:"attachments"`
	CreatedAt   time.Time   `json:"created_at"`
	UpdatedAt   OptDateTime `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *Portfolio) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *Portfolio) GetName() Name {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *Portfolio) GetDescription() Description {
	return s.Description
}

// GetAttachments returns the value of Attachments.
func (s *Portfolio) GetAttachments() []URL {
	return s.Attachments
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Portfolio) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Portfolio) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Portfolio) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Portfolio) SetName(val Name) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *Portfolio) SetDescription(val Description) {
	s.Description = val
}

// SetAttachments sets the value of Attachments.
func (s *Portfolio) SetAttachments(val []URL) {
	s.Attachments = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Portfolio) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Portfolio) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// Ref: #
type Questionnaire struct {
	ID           int                   `json:"id"`
	Organization Organization          `json:"organization"`
	Answers      []QuestionnaireAnswer `json:"answers"`
	IsCompleted  bool                  `json:"is_completed"`
	CompletedAt  OptDateTime           `json:"completed_at"`
	CreatedAt    time.Time             `json:"created_at"`
}

// GetID returns the value of ID.
func (s *Questionnaire) GetID() int {
	return s.ID
}

// GetOrganization returns the value of Organization.
func (s *Questionnaire) GetOrganization() Organization {
	return s.Organization
}

// GetAnswers returns the value of Answers.
func (s *Questionnaire) GetAnswers() []QuestionnaireAnswer {
	return s.Answers
}

// GetIsCompleted returns the value of IsCompleted.
func (s *Questionnaire) GetIsCompleted() bool {
	return s.IsCompleted
}

// GetCompletedAt returns the value of CompletedAt.
func (s *Questionnaire) GetCompletedAt() OptDateTime {
	return s.CompletedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Questionnaire) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *Questionnaire) SetID(val int) {
	s.ID = val
}

// SetOrganization sets the value of Organization.
func (s *Questionnaire) SetOrganization(val Organization) {
	s.Organization = val
}

// SetAnswers sets the value of Answers.
func (s *Questionnaire) SetAnswers(val []QuestionnaireAnswer) {
	s.Answers = val
}

// SetIsCompleted sets the value of IsCompleted.
func (s *Questionnaire) SetIsCompleted(val bool) {
	s.IsCompleted = val
}

// SetCompletedAt sets the value of CompletedAt.
func (s *Questionnaire) SetCompletedAt(val OptDateTime) {
	s.CompletedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Questionnaire) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #
type QuestionnaireAnswer struct {
	// The answer to the question.
	Answer QuestionnaireAnswerAnswer `json:"answer"`
	// Optional comment for the answer.
	Comment OptString `json:"comment"`
}

// GetAnswer returns the value of Answer.
func (s *QuestionnaireAnswer) GetAnswer() QuestionnaireAnswerAnswer {
	return s.Answer
}

// GetComment returns the value of Comment.
func (s *QuestionnaireAnswer) GetComment() OptString {
	return s.Comment
}

// SetAnswer sets the value of Answer.
func (s *QuestionnaireAnswer) SetAnswer(val QuestionnaireAnswerAnswer) {
	s.Answer = val
}

// SetComment sets the value of Comment.
func (s *QuestionnaireAnswer) SetComment(val OptString) {
	s.Comment = val
}

// The answer to the question.
// QuestionnaireAnswerAnswer represents sum type.
type QuestionnaireAnswerAnswer struct {
	Type        QuestionnaireAnswerAnswerType // switch on this field
	String      string
	StringArray []string
}

// QuestionnaireAnswerAnswerType is oneOf type of QuestionnaireAnswerAnswer.
type QuestionnaireAnswerAnswerType string

// Possible values for QuestionnaireAnswerAnswerType.
const (
	StringQuestionnaireAnswerAnswer      QuestionnaireAnswerAnswerType = "string"
	StringArrayQuestionnaireAnswerAnswer QuestionnaireAnswerAnswerType = "[]string"
)

// IsString reports whether QuestionnaireAnswerAnswer is string.
func (s QuestionnaireAnswerAnswer) IsString() bool { return s.Type == StringQuestionnaireAnswerAnswer }

// IsStringArray reports whether QuestionnaireAnswerAnswer is []string.
func (s QuestionnaireAnswerAnswer) IsStringArray() bool {
	return s.Type == StringArrayQuestionnaireAnswerAnswer
}

// SetString sets QuestionnaireAnswerAnswer to string.
func (s *QuestionnaireAnswerAnswer) SetString(v string) {
	s.Type = StringQuestionnaireAnswerAnswer
	s.String = v
}

// GetString returns string and true boolean if QuestionnaireAnswerAnswer is string.
func (s QuestionnaireAnswerAnswer) GetString() (v string, ok bool) {
	if !s.IsString() {
		return v, false
	}
	return s.String, true
}

// NewStringQuestionnaireAnswerAnswer returns new QuestionnaireAnswerAnswer from string.
func NewStringQuestionnaireAnswerAnswer(v string) QuestionnaireAnswerAnswer {
	var s QuestionnaireAnswerAnswer
	s.SetString(v)
	return s
}

// SetStringArray sets QuestionnaireAnswerAnswer to []string.
func (s *QuestionnaireAnswerAnswer) SetStringArray(v []string) {
	s.Type = StringArrayQuestionnaireAnswerAnswer
	s.StringArray = v
}

// GetStringArray returns []string and true boolean if QuestionnaireAnswerAnswer is []string.
func (s QuestionnaireAnswerAnswer) GetStringArray() (v []string, ok bool) {
	if !s.IsStringArray() {
		return v, false
	}
	return s.StringArray, true
}

// NewStringArrayQuestionnaireAnswerAnswer returns new QuestionnaireAnswerAnswer from []string.
func NewStringArrayQuestionnaireAnswerAnswer(v []string) QuestionnaireAnswerAnswer {
	var s QuestionnaireAnswerAnswer
	s.SetStringArray(v)
	return s
}

// Ref: #
type Region struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *Region) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *Region) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *Region) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *Region) SetName(val string) {
	s.Name = val
}

// Merged schema.
// Ref: #
type RegularUser struct {
	ID            int          `json:"id"`
	Email         Email        `json:"email"`
	Phone         Phone        `json:"phone"`
	FirstName     Name         `json:"first_name"`
	LastName      Name         `json:"last_name"`
	MiddleName    OptName      `json:"middle_name"`
	AvatarURL     OptURL       `json:"avatar_url"`
	EmailVerified bool         `json:"email_verified"`
	IsBanned      bool         `json:"is_banned"`
	CreatedAt     time.Time    `json:"created_at"`
	UpdatedAt     time.Time    `json:"updated_at"`
	Organization  Organization `json:"organization"`
}

// GetID returns the value of ID.
func (s *RegularUser) GetID() int {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *RegularUser) GetEmail() Email {
	return s.Email
}

// GetPhone returns the value of Phone.
func (s *RegularUser) GetPhone() Phone {
	return s.Phone
}

// GetFirstName returns the value of FirstName.
func (s *RegularUser) GetFirstName() Name {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *RegularUser) GetLastName() Name {
	return s.LastName
}

// GetMiddleName returns the value of MiddleName.
func (s *RegularUser) GetMiddleName() OptName {
	return s.MiddleName
}

// GetAvatarURL returns the value of AvatarURL.
func (s *RegularUser) GetAvatarURL() OptURL {
	return s.AvatarURL
}

// GetEmailVerified returns the value of EmailVerified.
func (s *RegularUser) GetEmailVerified() bool {
	return s.EmailVerified
}

// GetIsBanned returns the value of IsBanned.
func (s *RegularUser) GetIsBanned() bool {
	return s.IsBanned
}

// GetCreatedAt returns the value of CreatedAt.
func (s *RegularUser) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *RegularUser) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetOrganization returns the value of Organization.
func (s *RegularUser) GetOrganization() Organization {
	return s.Organization
}

// SetID sets the value of ID.
func (s *RegularUser) SetID(val int) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *RegularUser) SetEmail(val Email) {
	s.Email = val
}

// SetPhone sets the value of Phone.
func (s *RegularUser) SetPhone(val Phone) {
	s.Phone = val
}

// SetFirstName sets the value of FirstName.
func (s *RegularUser) SetFirstName(val Name) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *RegularUser) SetLastName(val Name) {
	s.LastName = val
}

// SetMiddleName sets the value of MiddleName.
func (s *RegularUser) SetMiddleName(val OptName) {
	s.MiddleName = val
}

// SetAvatarURL sets the value of AvatarURL.
func (s *RegularUser) SetAvatarURL(val OptURL) {
	s.AvatarURL = val
}

// SetEmailVerified sets the value of EmailVerified.
func (s *RegularUser) SetEmailVerified(val bool) {
	s.EmailVerified = val
}

// SetIsBanned sets the value of IsBanned.
func (s *RegularUser) SetIsBanned(val bool) {
	s.IsBanned = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *RegularUser) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *RegularUser) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetOrganization sets the value of Organization.
func (s *RegularUser) SetOrganization(val Organization) {
	s.Organization = val
}

// Ref: #
type Role string

const (
	RoleUser       Role = "user"
	RoleEmployee   Role = "employee"
	RoleAdmin      Role = "admin"
	RoleSuperAdmin Role = "super_admin"
)

// AllValues returns all Role values.
func (Role) AllValues() []Role {
	return []Role{
		RoleUser,
		RoleEmployee,
		RoleAdmin,
		RoleSuperAdmin,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Role) MarshalText() ([]byte, error) {
	switch s {
	case RoleUser:
		return []byte(s), nil
	case RoleEmployee:
		return []byte(s), nil
	case RoleAdmin:
		return []byte(s), nil
	case RoleSuperAdmin:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Role) UnmarshalText(data []byte) error {
	switch Role(data) {
	case RoleUser:
		*s = RoleUser
		return nil
	case RoleEmployee:
		*s = RoleEmployee
		return nil
	case RoleAdmin:
		*s = RoleAdmin
		return nil
	case RoleSuperAdmin:
		*s = RoleSuperAdmin
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #
type Service struct {
	ID       int    `json:"id"`
	ParentID OptInt `json:"parent_id"`
	Name     string `json:"name"`
}

// GetID returns the value of ID.
func (s *Service) GetID() int {
	return s.ID
}

// GetParentID returns the value of ParentID.
func (s *Service) GetParentID() OptInt {
	return s.ParentID
}

// GetName returns the value of Name.
func (s *Service) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *Service) SetID(val int) {
	s.ID = val
}

// SetParentID sets the value of ParentID.
func (s *Service) SetParentID(val OptInt) {
	s.ParentID = val
}

// SetName sets the value of Name.
func (s *Service) SetName(val string) {
	s.Name = val
}

type Services []Service

// Ref: #
type Survey string

const (
	SurveySURVEYTYPEREGISTRATION Survey = "SURVEY_TYPE_REGISTRATION"
	SurveySURVEYTYPEVERIFICATION Survey = "SURVEY_TYPE_VERIFICATION"
	SurveySURVEYTYPEFEEDBACK     Survey = "SURVEY_TYPE_FEEDBACK"
)

// AllValues returns all Survey values.
func (Survey) AllValues() []Survey {
	return []Survey{
		SurveySURVEYTYPEREGISTRATION,
		SurveySURVEYTYPEVERIFICATION,
		SurveySURVEYTYPEFEEDBACK,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s Survey) MarshalText() ([]byte, error) {
	switch s {
	case SurveySURVEYTYPEREGISTRATION:
		return []byte(s), nil
	case SurveySURVEYTYPEVERIFICATION:
		return []byte(s), nil
	case SurveySURVEYTYPEFEEDBACK:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *Survey) UnmarshalText(data []byte) error {
	switch Survey(data) {
	case SurveySURVEYTYPEREGISTRATION:
		*s = SurveySURVEYTYPEREGISTRATION
		return nil
	case SurveySURVEYTYPEVERIFICATION:
		*s = SurveySURVEYTYPEVERIFICATION
		return nil
	case SurveySURVEYTYPEFEEDBACK:
		*s = SurveySURVEYTYPEFEEDBACK
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type TaxCode string

// Ref: #
type Tender struct {
	ID                 int                   `json:"id"`
	Organization       Organization          `json:"organization"`
	WinnerOrganization OptOrganization       `json:"winner_organization"`
	Name               string                `json:"name"`
	City               City                  `json:"city"`
	Price              float64               `json:"price"`
	IsContractPrice    bool                  `json:"is_contract_price"`
	IsNdsPrice         bool                  `json:"is_nds_price"`
	IsDraft            bool                  `json:"is_draft"`
	FloorSpace         int                   `json:"floor_space"`
	Description        string                `json:"description"`
	Wishes             string                `json:"wishes"`
	Specification      URL                   `json:"specification"`
	Attachments        []URL                 `json:"attachments"`
	Services           Services              `json:"services"`
	Objects            Objects               `json:"objects"`
	Status             string                `json:"status"`
	VerificationStatus OptVerificationStatus `json:"verification_status"`
	// Дата начала приема заявок.
	ReceptionStart time.Time `json:"reception_start"`
	// Дата окончания приема заявок.
	ReceptionEnd time.Time `json:"reception_end"`
	WorkStart    time.Time `json:"work_start"`
	WorkEnd      time.Time `json:"work_end"`
	CreatedAt    time.Time `json:"created_at"`
	UpdatedAt    time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *Tender) GetID() int {
	return s.ID
}

// GetOrganization returns the value of Organization.
func (s *Tender) GetOrganization() Organization {
	return s.Organization
}

// GetWinnerOrganization returns the value of WinnerOrganization.
func (s *Tender) GetWinnerOrganization() OptOrganization {
	return s.WinnerOrganization
}

// GetName returns the value of Name.
func (s *Tender) GetName() string {
	return s.Name
}

// GetCity returns the value of City.
func (s *Tender) GetCity() City {
	return s.City
}

// GetPrice returns the value of Price.
func (s *Tender) GetPrice() float64 {
	return s.Price
}

// GetIsContractPrice returns the value of IsContractPrice.
func (s *Tender) GetIsContractPrice() bool {
	return s.IsContractPrice
}

// GetIsNdsPrice returns the value of IsNdsPrice.
func (s *Tender) GetIsNdsPrice() bool {
	return s.IsNdsPrice
}

// GetIsDraft returns the value of IsDraft.
func (s *Tender) GetIsDraft() bool {
	return s.IsDraft
}

// GetFloorSpace returns the value of FloorSpace.
func (s *Tender) GetFloorSpace() int {
	return s.FloorSpace
}

// GetDescription returns the value of Description.
func (s *Tender) GetDescription() string {
	return s.Description
}

// GetWishes returns the value of Wishes.
func (s *Tender) GetWishes() string {
	return s.Wishes
}

// GetSpecification returns the value of Specification.
func (s *Tender) GetSpecification() URL {
	return s.Specification
}

// GetAttachments returns the value of Attachments.
func (s *Tender) GetAttachments() []URL {
	return s.Attachments
}

// GetServices returns the value of Services.
func (s *Tender) GetServices() Services {
	return s.Services
}

// GetObjects returns the value of Objects.
func (s *Tender) GetObjects() Objects {
	return s.Objects
}

// GetStatus returns the value of Status.
func (s *Tender) GetStatus() string {
	return s.Status
}

// GetVerificationStatus returns the value of VerificationStatus.
func (s *Tender) GetVerificationStatus() OptVerificationStatus {
	return s.VerificationStatus
}

// GetReceptionStart returns the value of ReceptionStart.
func (s *Tender) GetReceptionStart() time.Time {
	return s.ReceptionStart
}

// GetReceptionEnd returns the value of ReceptionEnd.
func (s *Tender) GetReceptionEnd() time.Time {
	return s.ReceptionEnd
}

// GetWorkStart returns the value of WorkStart.
func (s *Tender) GetWorkStart() time.Time {
	return s.WorkStart
}

// GetWorkEnd returns the value of WorkEnd.
func (s *Tender) GetWorkEnd() time.Time {
	return s.WorkEnd
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Tender) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Tender) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *Tender) SetID(val int) {
	s.ID = val
}

// SetOrganization sets the value of Organization.
func (s *Tender) SetOrganization(val Organization) {
	s.Organization = val
}

// SetWinnerOrganization sets the value of WinnerOrganization.
func (s *Tender) SetWinnerOrganization(val OptOrganization) {
	s.WinnerOrganization = val
}

// SetName sets the value of Name.
func (s *Tender) SetName(val string) {
	s.Name = val
}

// SetCity sets the value of City.
func (s *Tender) SetCity(val City) {
	s.City = val
}

// SetPrice sets the value of Price.
func (s *Tender) SetPrice(val float64) {
	s.Price = val
}

// SetIsContractPrice sets the value of IsContractPrice.
func (s *Tender) SetIsContractPrice(val bool) {
	s.IsContractPrice = val
}

// SetIsNdsPrice sets the value of IsNdsPrice.
func (s *Tender) SetIsNdsPrice(val bool) {
	s.IsNdsPrice = val
}

// SetIsDraft sets the value of IsDraft.
func (s *Tender) SetIsDraft(val bool) {
	s.IsDraft = val
}

// SetFloorSpace sets the value of FloorSpace.
func (s *Tender) SetFloorSpace(val int) {
	s.FloorSpace = val
}

// SetDescription sets the value of Description.
func (s *Tender) SetDescription(val string) {
	s.Description = val
}

// SetWishes sets the value of Wishes.
func (s *Tender) SetWishes(val string) {
	s.Wishes = val
}

// SetSpecification sets the value of Specification.
func (s *Tender) SetSpecification(val URL) {
	s.Specification = val
}

// SetAttachments sets the value of Attachments.
func (s *Tender) SetAttachments(val []URL) {
	s.Attachments = val
}

// SetServices sets the value of Services.
func (s *Tender) SetServices(val Services) {
	s.Services = val
}

// SetObjects sets the value of Objects.
func (s *Tender) SetObjects(val Objects) {
	s.Objects = val
}

// SetStatus sets the value of Status.
func (s *Tender) SetStatus(val string) {
	s.Status = val
}

// SetVerificationStatus sets the value of VerificationStatus.
func (s *Tender) SetVerificationStatus(val OptVerificationStatus) {
	s.VerificationStatus = val
}

// SetReceptionStart sets the value of ReceptionStart.
func (s *Tender) SetReceptionStart(val time.Time) {
	s.ReceptionStart = val
}

// SetReceptionEnd sets the value of ReceptionEnd.
func (s *Tender) SetReceptionEnd(val time.Time) {
	s.ReceptionEnd = val
}

// SetWorkStart sets the value of WorkStart.
func (s *Tender) SetWorkStart(val time.Time) {
	s.WorkStart = val
}

// SetWorkEnd sets the value of WorkEnd.
func (s *Tender) SetWorkEnd(val time.Time) {
	s.WorkEnd = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Tender) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Tender) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

type URL string

// Ref: #
type User struct {
	ID            int       `json:"id"`
	Email         Email     `json:"email"`
	Phone         Phone     `json:"phone"`
	FirstName     Name      `json:"first_name"`
	LastName      Name      `json:"last_name"`
	MiddleName    OptName   `json:"middle_name"`
	AvatarURL     OptURL    `json:"avatar_url"`
	EmailVerified bool      `json:"email_verified"`
	IsBanned      bool      `json:"is_banned"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *User) GetID() int {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() Email {
	return s.Email
}

// GetPhone returns the value of Phone.
func (s *User) GetPhone() Phone {
	return s.Phone
}

// GetFirstName returns the value of FirstName.
func (s *User) GetFirstName() Name {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *User) GetLastName() Name {
	return s.LastName
}

// GetMiddleName returns the value of MiddleName.
func (s *User) GetMiddleName() OptName {
	return s.MiddleName
}

// GetAvatarURL returns the value of AvatarURL.
func (s *User) GetAvatarURL() OptURL {
	return s.AvatarURL
}

// GetEmailVerified returns the value of EmailVerified.
func (s *User) GetEmailVerified() bool {
	return s.EmailVerified
}

// GetIsBanned returns the value of IsBanned.
func (s *User) GetIsBanned() bool {
	return s.IsBanned
}

// GetCreatedAt returns the value of CreatedAt.
func (s *User) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *User) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *User) SetID(val int) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val Email) {
	s.Email = val
}

// SetPhone sets the value of Phone.
func (s *User) SetPhone(val Phone) {
	s.Phone = val
}

// SetFirstName sets the value of FirstName.
func (s *User) SetFirstName(val Name) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *User) SetLastName(val Name) {
	s.LastName = val
}

// SetMiddleName sets the value of MiddleName.
func (s *User) SetMiddleName(val OptName) {
	s.MiddleName = val
}

// SetAvatarURL sets the value of AvatarURL.
func (s *User) SetAvatarURL(val OptURL) {
	s.AvatarURL = val
}

// SetEmailVerified sets the value of EmailVerified.
func (s *User) SetEmailVerified(val bool) {
	s.EmailVerified = val
}

// SetIsBanned sets the value of IsBanned.
func (s *User) SetIsBanned(val bool) {
	s.IsBanned = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *User) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *User) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// V1AuthLogoutPostNoContent is response for V1AuthLogoutPost operation.
type V1AuthLogoutPostNoContent struct {
	SetCookie OptString
}

// GetSetCookie returns the value of SetCookie.
func (s *V1AuthLogoutPostNoContent) GetSetCookie() OptString {
	return s.SetCookie
}

// SetSetCookie sets the value of SetCookie.
func (s *V1AuthLogoutPostNoContent) SetSetCookie(val OptString) {
	s.SetCookie = val
}

func (*V1AuthLogoutPostNoContent) v1AuthLogoutPostRes() {}

type V1AuthRefreshPostOK struct {
	Data V1AuthRefreshPostOKData `json:"data"`
}

// GetData returns the value of Data.
func (s *V1AuthRefreshPostOK) GetData() V1AuthRefreshPostOKData {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1AuthRefreshPostOK) SetData(val V1AuthRefreshPostOKData) {
	s.Data = val
}

type V1AuthRefreshPostOKData struct {
	User        User   `json:"user"`
	AccessToken string `json:"access_token"`
}

// GetUser returns the value of User.
func (s *V1AuthRefreshPostOKData) GetUser() User {
	return s.User
}

// GetAccessToken returns the value of AccessToken.
func (s *V1AuthRefreshPostOKData) GetAccessToken() string {
	return s.AccessToken
}

// SetUser sets the value of User.
func (s *V1AuthRefreshPostOKData) SetUser(val User) {
	s.User = val
}

// SetAccessToken sets the value of AccessToken.
func (s *V1AuthRefreshPostOKData) SetAccessToken(val string) {
	s.AccessToken = val
}

// V1AuthRefreshPostOKHeaders wraps V1AuthRefreshPostOK with response headers.
type V1AuthRefreshPostOKHeaders struct {
	SetCookie OptString
	Response  V1AuthRefreshPostOK
}

// GetSetCookie returns the value of SetCookie.
func (s *V1AuthRefreshPostOKHeaders) GetSetCookie() OptString {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *V1AuthRefreshPostOKHeaders) GetResponse() V1AuthRefreshPostOK {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *V1AuthRefreshPostOKHeaders) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *V1AuthRefreshPostOKHeaders) SetResponse(val V1AuthRefreshPostOK) {
	s.Response = val
}

func (*V1AuthRefreshPostOKHeaders) v1AuthRefreshPostRes() {}

type V1AuthSigninPostOK struct {
	Data V1AuthSigninPostOKData `json:"data"`
}

// GetData returns the value of Data.
func (s *V1AuthSigninPostOK) GetData() V1AuthSigninPostOKData {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1AuthSigninPostOK) SetData(val V1AuthSigninPostOKData) {
	s.Data = val
}

type V1AuthSigninPostOKData struct {
	User        RegularUser `json:"user"`
	AccessToken string      `json:"access_token"`
}

// GetUser returns the value of User.
func (s *V1AuthSigninPostOKData) GetUser() RegularUser {
	return s.User
}

// GetAccessToken returns the value of AccessToken.
func (s *V1AuthSigninPostOKData) GetAccessToken() string {
	return s.AccessToken
}

// SetUser sets the value of User.
func (s *V1AuthSigninPostOKData) SetUser(val RegularUser) {
	s.User = val
}

// SetAccessToken sets the value of AccessToken.
func (s *V1AuthSigninPostOKData) SetAccessToken(val string) {
	s.AccessToken = val
}

// V1AuthSigninPostOKHeaders wraps V1AuthSigninPostOK with response headers.
type V1AuthSigninPostOKHeaders struct {
	SetCookie OptString
	Response  V1AuthSigninPostOK
}

// GetSetCookie returns the value of SetCookie.
func (s *V1AuthSigninPostOKHeaders) GetSetCookie() OptString {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *V1AuthSigninPostOKHeaders) GetResponse() V1AuthSigninPostOK {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *V1AuthSigninPostOKHeaders) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *V1AuthSigninPostOKHeaders) SetResponse(val V1AuthSigninPostOK) {
	s.Response = val
}

func (*V1AuthSigninPostOKHeaders) v1AuthSigninPostRes() {}

type V1AuthSigninPostReq struct {
	Email    Email    `json:"email"`
	Password Password `json:"password"`
}

// GetEmail returns the value of Email.
func (s *V1AuthSigninPostReq) GetEmail() Email {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *V1AuthSigninPostReq) GetPassword() Password {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *V1AuthSigninPostReq) SetEmail(val Email) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *V1AuthSigninPostReq) SetPassword(val Password) {
	s.Password = val
}

type V1AuthSignupPostCreated struct {
	Data V1AuthSignupPostCreatedData `json:"data"`
}

// GetData returns the value of Data.
func (s *V1AuthSignupPostCreated) GetData() V1AuthSignupPostCreatedData {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1AuthSignupPostCreated) SetData(val V1AuthSignupPostCreatedData) {
	s.Data = val
}

type V1AuthSignupPostCreatedData struct {
	User        RegularUser `json:"user"`
	AccessToken string      `json:"access_token"`
}

// GetUser returns the value of User.
func (s *V1AuthSignupPostCreatedData) GetUser() RegularUser {
	return s.User
}

// GetAccessToken returns the value of AccessToken.
func (s *V1AuthSignupPostCreatedData) GetAccessToken() string {
	return s.AccessToken
}

// SetUser sets the value of User.
func (s *V1AuthSignupPostCreatedData) SetUser(val RegularUser) {
	s.User = val
}

// SetAccessToken sets the value of AccessToken.
func (s *V1AuthSignupPostCreatedData) SetAccessToken(val string) {
	s.AccessToken = val
}

// V1AuthSignupPostCreatedHeaders wraps V1AuthSignupPostCreated with response headers.
type V1AuthSignupPostCreatedHeaders struct {
	SetCookie OptString
	Response  V1AuthSignupPostCreated
}

// GetSetCookie returns the value of SetCookie.
func (s *V1AuthSignupPostCreatedHeaders) GetSetCookie() OptString {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *V1AuthSignupPostCreatedHeaders) GetResponse() V1AuthSignupPostCreated {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *V1AuthSignupPostCreatedHeaders) SetSetCookie(val OptString) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *V1AuthSignupPostCreatedHeaders) SetResponse(val V1AuthSignupPostCreated) {
	s.Response = val
}

func (*V1AuthSignupPostCreatedHeaders) v1AuthSignupPostRes() {}

type V1AuthSignupPostReq struct {
	Email        Email    `json:"email"`
	Phone        Phone    `json:"phone"`
	Password     Password `json:"password"`
	FirstName    Name     `json:"first_name"`
	LastName     Name     `json:"last_name"`
	MiddleName   OptName  `json:"middle_name"`
	AvatarURL    OptURL   `json:"avatar_url"`
	Inn          Inn      `json:"inn"`
	IsContractor bool     `json:"is_contractor"`
}

// GetEmail returns the value of Email.
func (s *V1AuthSignupPostReq) GetEmail() Email {
	return s.Email
}

// GetPhone returns the value of Phone.
func (s *V1AuthSignupPostReq) GetPhone() Phone {
	return s.Phone
}

// GetPassword returns the value of Password.
func (s *V1AuthSignupPostReq) GetPassword() Password {
	return s.Password
}

// GetFirstName returns the value of FirstName.
func (s *V1AuthSignupPostReq) GetFirstName() Name {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *V1AuthSignupPostReq) GetLastName() Name {
	return s.LastName
}

// GetMiddleName returns the value of MiddleName.
func (s *V1AuthSignupPostReq) GetMiddleName() OptName {
	return s.MiddleName
}

// GetAvatarURL returns the value of AvatarURL.
func (s *V1AuthSignupPostReq) GetAvatarURL() OptURL {
	return s.AvatarURL
}

// GetInn returns the value of Inn.
func (s *V1AuthSignupPostReq) GetInn() Inn {
	return s.Inn
}

// GetIsContractor returns the value of IsContractor.
func (s *V1AuthSignupPostReq) GetIsContractor() bool {
	return s.IsContractor
}

// SetEmail sets the value of Email.
func (s *V1AuthSignupPostReq) SetEmail(val Email) {
	s.Email = val
}

// SetPhone sets the value of Phone.
func (s *V1AuthSignupPostReq) SetPhone(val Phone) {
	s.Phone = val
}

// SetPassword sets the value of Password.
func (s *V1AuthSignupPostReq) SetPassword(val Password) {
	s.Password = val
}

// SetFirstName sets the value of FirstName.
func (s *V1AuthSignupPostReq) SetFirstName(val Name) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *V1AuthSignupPostReq) SetLastName(val Name) {
	s.LastName = val
}

// SetMiddleName sets the value of MiddleName.
func (s *V1AuthSignupPostReq) SetMiddleName(val OptName) {
	s.MiddleName = val
}

// SetAvatarURL sets the value of AvatarURL.
func (s *V1AuthSignupPostReq) SetAvatarURL(val OptURL) {
	s.AvatarURL = val
}

// SetInn sets the value of Inn.
func (s *V1AuthSignupPostReq) SetInn(val Inn) {
	s.Inn = val
}

// SetIsContractor sets the value of IsContractor.
func (s *V1AuthSignupPostReq) SetIsContractor(val bool) {
	s.IsContractor = val
}

type V1AuthUserGetOK struct {
	Data RegularUser `json:"data"`
}

// GetData returns the value of Data.
func (s *V1AuthUserGetOK) GetData() RegularUser {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1AuthUserGetOK) SetData(val RegularUser) {
	s.Data = val
}

func (*V1AuthUserGetOK) v1AuthUserGetRes() {}

type V1CatalogCitiesPostCreated struct {
	Data V1CatalogCitiesPostCreatedData `json:"data"`
}

// GetData returns the value of Data.
func (s *V1CatalogCitiesPostCreated) GetData() V1CatalogCitiesPostCreatedData {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1CatalogCitiesPostCreated) SetData(val V1CatalogCitiesPostCreatedData) {
	s.Data = val
}

func (*V1CatalogCitiesPostCreated) v1CatalogCitiesPostRes() {}

type V1CatalogCitiesPostCreatedData struct {
	City City `json:"city"`
}

// GetCity returns the value of City.
func (s *V1CatalogCitiesPostCreatedData) GetCity() City {
	return s.City
}

// SetCity sets the value of City.
func (s *V1CatalogCitiesPostCreatedData) SetCity(val City) {
	s.City = val
}

type V1CatalogCitiesPostReq struct {
	Name     string `json:"name"`
	RegionID int    `json:"region_id"`
}

// GetName returns the value of Name.
func (s *V1CatalogCitiesPostReq) GetName() string {
	return s.Name
}

// GetRegionID returns the value of RegionID.
func (s *V1CatalogCitiesPostReq) GetRegionID() int {
	return s.RegionID
}

// SetName sets the value of Name.
func (s *V1CatalogCitiesPostReq) SetName(val string) {
	s.Name = val
}

// SetRegionID sets the value of RegionID.
func (s *V1CatalogCitiesPostReq) SetRegionID(val int) {
	s.RegionID = val
}

type V1CatalogObjectsGetDirection string

const (
	V1CatalogObjectsGetDirectionASC  V1CatalogObjectsGetDirection = "ASC"
	V1CatalogObjectsGetDirectionDESC V1CatalogObjectsGetDirection = "DESC"
)

// AllValues returns all V1CatalogObjectsGetDirection values.
func (V1CatalogObjectsGetDirection) AllValues() []V1CatalogObjectsGetDirection {
	return []V1CatalogObjectsGetDirection{
		V1CatalogObjectsGetDirectionASC,
		V1CatalogObjectsGetDirectionDESC,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1CatalogObjectsGetDirection) MarshalText() ([]byte, error) {
	switch s {
	case V1CatalogObjectsGetDirectionASC:
		return []byte(s), nil
	case V1CatalogObjectsGetDirectionDESC:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1CatalogObjectsGetDirection) UnmarshalText(data []byte) error {
	switch V1CatalogObjectsGetDirection(data) {
	case V1CatalogObjectsGetDirectionASC:
		*s = V1CatalogObjectsGetDirectionASC
		return nil
	case V1CatalogObjectsGetDirectionDESC:
		*s = V1CatalogObjectsGetDirectionDESC
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1CatalogObjectsGetOK struct {
	Data Objects `json:"data"`
}

// GetData returns the value of Data.
func (s *V1CatalogObjectsGetOK) GetData() Objects {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1CatalogObjectsGetOK) SetData(val Objects) {
	s.Data = val
}

func (*V1CatalogObjectsGetOK) v1CatalogObjectsGetRes() {}

type V1CatalogObjectsGetSort string

const (
	V1CatalogObjectsGetSortID V1CatalogObjectsGetSort = "id"
)

// AllValues returns all V1CatalogObjectsGetSort values.
func (V1CatalogObjectsGetSort) AllValues() []V1CatalogObjectsGetSort {
	return []V1CatalogObjectsGetSort{
		V1CatalogObjectsGetSortID,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1CatalogObjectsGetSort) MarshalText() ([]byte, error) {
	switch s {
	case V1CatalogObjectsGetSortID:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1CatalogObjectsGetSort) UnmarshalText(data []byte) error {
	switch V1CatalogObjectsGetSort(data) {
	case V1CatalogObjectsGetSortID:
		*s = V1CatalogObjectsGetSortID
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1CatalogObjectsPostCreated struct {
	Data Object `json:"data"`
}

// GetData returns the value of Data.
func (s *V1CatalogObjectsPostCreated) GetData() Object {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1CatalogObjectsPostCreated) SetData(val Object) {
	s.Data = val
}

func (*V1CatalogObjectsPostCreated) v1CatalogObjectsPostRes() {}

type V1CatalogObjectsPostReq struct {
	Name     string `json:"name"`
	ParentID OptInt `json:"parent_id"`
}

// GetName returns the value of Name.
func (s *V1CatalogObjectsPostReq) GetName() string {
	return s.Name
}

// GetParentID returns the value of ParentID.
func (s *V1CatalogObjectsPostReq) GetParentID() OptInt {
	return s.ParentID
}

// SetName sets the value of Name.
func (s *V1CatalogObjectsPostReq) SetName(val string) {
	s.Name = val
}

// SetParentID sets the value of ParentID.
func (s *V1CatalogObjectsPostReq) SetParentID(val OptInt) {
	s.ParentID = val
}

type V1CatalogRegionsPostCreated struct {
	Data Region `json:"data"`
}

// GetData returns the value of Data.
func (s *V1CatalogRegionsPostCreated) GetData() Region {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1CatalogRegionsPostCreated) SetData(val Region) {
	s.Data = val
}

func (*V1CatalogRegionsPostCreated) v1CatalogRegionsPostRes() {}

type V1CatalogRegionsPostReq struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *V1CatalogRegionsPostReq) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *V1CatalogRegionsPostReq) SetName(val string) {
	s.Name = val
}

type V1CatalogServicesGetDirection string

const (
	V1CatalogServicesGetDirectionASC  V1CatalogServicesGetDirection = "ASC"
	V1CatalogServicesGetDirectionDESC V1CatalogServicesGetDirection = "DESC"
)

// AllValues returns all V1CatalogServicesGetDirection values.
func (V1CatalogServicesGetDirection) AllValues() []V1CatalogServicesGetDirection {
	return []V1CatalogServicesGetDirection{
		V1CatalogServicesGetDirectionASC,
		V1CatalogServicesGetDirectionDESC,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1CatalogServicesGetDirection) MarshalText() ([]byte, error) {
	switch s {
	case V1CatalogServicesGetDirectionASC:
		return []byte(s), nil
	case V1CatalogServicesGetDirectionDESC:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1CatalogServicesGetDirection) UnmarshalText(data []byte) error {
	switch V1CatalogServicesGetDirection(data) {
	case V1CatalogServicesGetDirectionASC:
		*s = V1CatalogServicesGetDirectionASC
		return nil
	case V1CatalogServicesGetDirectionDESC:
		*s = V1CatalogServicesGetDirectionDESC
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1CatalogServicesGetOK struct {
	Data Services `json:"data"`
}

// GetData returns the value of Data.
func (s *V1CatalogServicesGetOK) GetData() Services {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1CatalogServicesGetOK) SetData(val Services) {
	s.Data = val
}

func (*V1CatalogServicesGetOK) v1CatalogServicesGetRes() {}

type V1CatalogServicesGetSort string

const (
	V1CatalogServicesGetSortID V1CatalogServicesGetSort = "id"
)

// AllValues returns all V1CatalogServicesGetSort values.
func (V1CatalogServicesGetSort) AllValues() []V1CatalogServicesGetSort {
	return []V1CatalogServicesGetSort{
		V1CatalogServicesGetSortID,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1CatalogServicesGetSort) MarshalText() ([]byte, error) {
	switch s {
	case V1CatalogServicesGetSortID:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1CatalogServicesGetSort) UnmarshalText(data []byte) error {
	switch V1CatalogServicesGetSort(data) {
	case V1CatalogServicesGetSortID:
		*s = V1CatalogServicesGetSortID
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1CatalogServicesPostCreated struct {
	Data Service `json:"data"`
}

// GetData returns the value of Data.
func (s *V1CatalogServicesPostCreated) GetData() Service {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1CatalogServicesPostCreated) SetData(val Service) {
	s.Data = val
}

func (*V1CatalogServicesPostCreated) v1CatalogServicesPostRes() {}

type V1CatalogServicesPostReq struct {
	Name     string `json:"name"`
	ParentID OptInt `json:"parent_id"`
}

// GetName returns the value of Name.
func (s *V1CatalogServicesPostReq) GetName() string {
	return s.Name
}

// GetParentID returns the value of ParentID.
func (s *V1CatalogServicesPostReq) GetParentID() OptInt {
	return s.ParentID
}

// SetName sets the value of Name.
func (s *V1CatalogServicesPostReq) SetName(val string) {
	s.Name = val
}

// SetParentID sets the value of ParentID.
func (s *V1CatalogServicesPostReq) SetParentID(val OptInt) {
	s.ParentID = val
}

type V1CommentsVerificationsGetDirection string

const (
	V1CommentsVerificationsGetDirectionASC  V1CommentsVerificationsGetDirection = "ASC"
	V1CommentsVerificationsGetDirectionDESC V1CommentsVerificationsGetDirection = "DESC"
)

// AllValues returns all V1CommentsVerificationsGetDirection values.
func (V1CommentsVerificationsGetDirection) AllValues() []V1CommentsVerificationsGetDirection {
	return []V1CommentsVerificationsGetDirection{
		V1CommentsVerificationsGetDirectionASC,
		V1CommentsVerificationsGetDirectionDESC,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1CommentsVerificationsGetDirection) MarshalText() ([]byte, error) {
	switch s {
	case V1CommentsVerificationsGetDirectionASC:
		return []byte(s), nil
	case V1CommentsVerificationsGetDirectionDESC:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1CommentsVerificationsGetDirection) UnmarshalText(data []byte) error {
	switch V1CommentsVerificationsGetDirection(data) {
	case V1CommentsVerificationsGetDirectionASC:
		*s = V1CommentsVerificationsGetDirectionASC
		return nil
	case V1CommentsVerificationsGetDirectionDESC:
		*s = V1CommentsVerificationsGetDirectionDESC
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1CommentsVerificationsGetOK struct {
	Data []VerificationRequest `json:"data"`
}

// GetData returns the value of Data.
func (s *V1CommentsVerificationsGetOK) GetData() []VerificationRequest {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1CommentsVerificationsGetOK) SetData(val []VerificationRequest) {
	s.Data = val
}

func (*V1CommentsVerificationsGetOK) v1CommentsVerificationsGetRes() {}

type V1CommentsVerificationsGetSort string

const (
	V1CommentsVerificationsGetSortID V1CommentsVerificationsGetSort = "id"
)

// AllValues returns all V1CommentsVerificationsGetSort values.
func (V1CommentsVerificationsGetSort) AllValues() []V1CommentsVerificationsGetSort {
	return []V1CommentsVerificationsGetSort{
		V1CommentsVerificationsGetSortID,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1CommentsVerificationsGetSort) MarshalText() ([]byte, error) {
	switch s {
	case V1CommentsVerificationsGetSortID:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1CommentsVerificationsGetSort) UnmarshalText(data []byte) error {
	switch V1CommentsVerificationsGetSort(data) {
	case V1CommentsVerificationsGetSortID:
		*s = V1CommentsVerificationsGetSortID
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1EmployeePostCreated struct {
	Data EmployeeUser `json:"data"`
}

// GetData returns the value of Data.
func (s *V1EmployeePostCreated) GetData() EmployeeUser {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1EmployeePostCreated) SetData(val EmployeeUser) {
	s.Data = val
}

func (*V1EmployeePostCreated) v1EmployeePostRes() {}

type V1EmployeePostReq struct {
	Email      Email    `json:"email"`
	Phone      Phone    `json:"phone"`
	Password   Password `json:"password"`
	FirstName  Name     `json:"first_name"`
	LastName   Name     `json:"last_name"`
	MiddleName OptName  `json:"middle_name"`
	Role       Role     `json:"role"`
	Position   string   `json:"position"`
}

// GetEmail returns the value of Email.
func (s *V1EmployeePostReq) GetEmail() Email {
	return s.Email
}

// GetPhone returns the value of Phone.
func (s *V1EmployeePostReq) GetPhone() Phone {
	return s.Phone
}

// GetPassword returns the value of Password.
func (s *V1EmployeePostReq) GetPassword() Password {
	return s.Password
}

// GetFirstName returns the value of FirstName.
func (s *V1EmployeePostReq) GetFirstName() Name {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *V1EmployeePostReq) GetLastName() Name {
	return s.LastName
}

// GetMiddleName returns the value of MiddleName.
func (s *V1EmployeePostReq) GetMiddleName() OptName {
	return s.MiddleName
}

// GetRole returns the value of Role.
func (s *V1EmployeePostReq) GetRole() Role {
	return s.Role
}

// GetPosition returns the value of Position.
func (s *V1EmployeePostReq) GetPosition() string {
	return s.Position
}

// SetEmail sets the value of Email.
func (s *V1EmployeePostReq) SetEmail(val Email) {
	s.Email = val
}

// SetPhone sets the value of Phone.
func (s *V1EmployeePostReq) SetPhone(val Phone) {
	s.Phone = val
}

// SetPassword sets the value of Password.
func (s *V1EmployeePostReq) SetPassword(val Password) {
	s.Password = val
}

// SetFirstName sets the value of FirstName.
func (s *V1EmployeePostReq) SetFirstName(val Name) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *V1EmployeePostReq) SetLastName(val Name) {
	s.LastName = val
}

// SetMiddleName sets the value of MiddleName.
func (s *V1EmployeePostReq) SetMiddleName(val OptName) {
	s.MiddleName = val
}

// SetRole sets the value of Role.
func (s *V1EmployeePostReq) SetRole(val Role) {
	s.Role = val
}

// SetPosition sets the value of Position.
func (s *V1EmployeePostReq) SetPosition(val string) {
	s.Position = val
}

type V1OrganizationsContractorsGetOK struct {
	Data []Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsContractorsGetOK) GetData() []Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsContractorsGetOK) SetData(val []Organization) {
	s.Data = val
}

func (*V1OrganizationsContractorsGetOK) v1OrganizationsContractorsGetRes() {}

type V1OrganizationsGetDirection string

const (
	V1OrganizationsGetDirectionASC  V1OrganizationsGetDirection = "ASC"
	V1OrganizationsGetDirectionDESC V1OrganizationsGetDirection = "DESC"
)

// AllValues returns all V1OrganizationsGetDirection values.
func (V1OrganizationsGetDirection) AllValues() []V1OrganizationsGetDirection {
	return []V1OrganizationsGetDirection{
		V1OrganizationsGetDirectionASC,
		V1OrganizationsGetDirectionDESC,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1OrganizationsGetDirection) MarshalText() ([]byte, error) {
	switch s {
	case V1OrganizationsGetDirectionASC:
		return []byte(s), nil
	case V1OrganizationsGetDirectionDESC:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1OrganizationsGetDirection) UnmarshalText(data []byte) error {
	switch V1OrganizationsGetDirection(data) {
	case V1OrganizationsGetDirectionASC:
		*s = V1OrganizationsGetDirectionASC
		return nil
	case V1OrganizationsGetDirectionDESC:
		*s = V1OrganizationsGetDirectionDESC
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1OrganizationsGetOK struct {
	Data V1OrganizationsGetOKData `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsGetOK) GetData() V1OrganizationsGetOKData {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsGetOK) SetData(val V1OrganizationsGetOKData) {
	s.Data = val
}

func (*V1OrganizationsGetOK) v1OrganizationsGetRes() {}

type V1OrganizationsGetOKData struct {
	Organizations []Organization `json:"organizations"`
}

// GetOrganizations returns the value of Organizations.
func (s *V1OrganizationsGetOKData) GetOrganizations() []Organization {
	return s.Organizations
}

// SetOrganizations sets the value of Organizations.
func (s *V1OrganizationsGetOKData) SetOrganizations(val []Organization) {
	s.Organizations = val
}

type V1OrganizationsGetSort string

const (
	V1OrganizationsGetSortID V1OrganizationsGetSort = "id"
)

// AllValues returns all V1OrganizationsGetSort values.
func (V1OrganizationsGetSort) AllValues() []V1OrganizationsGetSort {
	return []V1OrganizationsGetSort{
		V1OrganizationsGetSortID,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1OrganizationsGetSort) MarshalText() ([]byte, error) {
	switch s {
	case V1OrganizationsGetSortID:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1OrganizationsGetSort) UnmarshalText(data []byte) error {
	switch V1OrganizationsGetSort(data) {
	case V1OrganizationsGetSortID:
		*s = V1OrganizationsGetSortID
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1OrganizationsOrganizationIDGetOK struct {
	Data Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsOrganizationIDGetOK) GetData() Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsOrganizationIDGetOK) SetData(val Organization) {
	s.Data = val
}

func (*V1OrganizationsOrganizationIDGetOK) v1OrganizationsOrganizationIDGetRes() {}

type V1OrganizationsOrganizationIDPortfolioGetOK struct {
	Data []Portfolio `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsOrganizationIDPortfolioGetOK) GetData() []Portfolio {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsOrganizationIDPortfolioGetOK) SetData(val []Portfolio) {
	s.Data = val
}

func (*V1OrganizationsOrganizationIDPortfolioGetOK) v1OrganizationsOrganizationIDPortfolioGetRes() {}

type V1OrganizationsOrganizationIDPortfolioPostOK struct {
	Data Portfolio `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsOrganizationIDPortfolioPostOK) GetData() Portfolio {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsOrganizationIDPortfolioPostOK) SetData(val Portfolio) {
	s.Data = val
}

func (*V1OrganizationsOrganizationIDPortfolioPostOK) v1OrganizationsOrganizationIDPortfolioPostRes() {
}

type V1OrganizationsOrganizationIDPortfolioPostReq struct {
	Name        Name        `json:"name"`
	Description Description `json:"description"`
	Attachments []URL       `json:"attachments"`
}

// GetName returns the value of Name.
func (s *V1OrganizationsOrganizationIDPortfolioPostReq) GetName() Name {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *V1OrganizationsOrganizationIDPortfolioPostReq) GetDescription() Description {
	return s.Description
}

// GetAttachments returns the value of Attachments.
func (s *V1OrganizationsOrganizationIDPortfolioPostReq) GetAttachments() []URL {
	return s.Attachments
}

// SetName sets the value of Name.
func (s *V1OrganizationsOrganizationIDPortfolioPostReq) SetName(val Name) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *V1OrganizationsOrganizationIDPortfolioPostReq) SetDescription(val Description) {
	s.Description = val
}

// SetAttachments sets the value of Attachments.
func (s *V1OrganizationsOrganizationIDPortfolioPostReq) SetAttachments(val []URL) {
	s.Attachments = val
}

// V1OrganizationsOrganizationIDProfileBrandPutOK is response for V1OrganizationsOrganizationIDProfileBrandPut operation.
type V1OrganizationsOrganizationIDProfileBrandPutOK struct{}

func (*V1OrganizationsOrganizationIDProfileBrandPutOK) v1OrganizationsOrganizationIDProfileBrandPutRes() {
}

type V1OrganizationsOrganizationIDProfileBrandPutReq struct {
	// Название бренда.
	Brand     OptString `json:"brand"`
	AvatarURL OptURL    `json:"avatar_url"`
}

// GetBrand returns the value of Brand.
func (s *V1OrganizationsOrganizationIDProfileBrandPutReq) GetBrand() OptString {
	return s.Brand
}

// GetAvatarURL returns the value of AvatarURL.
func (s *V1OrganizationsOrganizationIDProfileBrandPutReq) GetAvatarURL() OptURL {
	return s.AvatarURL
}

// SetBrand sets the value of Brand.
func (s *V1OrganizationsOrganizationIDProfileBrandPutReq) SetBrand(val OptString) {
	s.Brand = val
}

// SetAvatarURL sets the value of AvatarURL.
func (s *V1OrganizationsOrganizationIDProfileBrandPutReq) SetAvatarURL(val OptURL) {
	s.AvatarURL = val
}

// V1OrganizationsOrganizationIDProfileContactsPutOK is response for V1OrganizationsOrganizationIDProfileContactsPut operation.
type V1OrganizationsOrganizationIDProfileContactsPutOK struct{}

func (*V1OrganizationsOrganizationIDProfileContactsPutOK) v1OrganizationsOrganizationIDProfileContactsPutRes() {
}

type V1OrganizationsOrganizationIDProfileContactsPutReq struct {
	Emails     []ContactInfo `json:"emails"`
	Phones     []ContactInfo `json:"phones"`
	Messengers []ContactInfo `json:"messengers"`
}

// GetEmails returns the value of Emails.
func (s *V1OrganizationsOrganizationIDProfileContactsPutReq) GetEmails() []ContactInfo {
	return s.Emails
}

// GetPhones returns the value of Phones.
func (s *V1OrganizationsOrganizationIDProfileContactsPutReq) GetPhones() []ContactInfo {
	return s.Phones
}

// GetMessengers returns the value of Messengers.
func (s *V1OrganizationsOrganizationIDProfileContactsPutReq) GetMessengers() []ContactInfo {
	return s.Messengers
}

// SetEmails sets the value of Emails.
func (s *V1OrganizationsOrganizationIDProfileContactsPutReq) SetEmails(val []ContactInfo) {
	s.Emails = val
}

// SetPhones sets the value of Phones.
func (s *V1OrganizationsOrganizationIDProfileContactsPutReq) SetPhones(val []ContactInfo) {
	s.Phones = val
}

// SetMessengers sets the value of Messengers.
func (s *V1OrganizationsOrganizationIDProfileContactsPutReq) SetMessengers(val []ContactInfo) {
	s.Messengers = val
}

type V1OrganizationsOrganizationIDProfileContractorPutOK struct {
	Data Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsOrganizationIDProfileContractorPutOK) GetData() Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsOrganizationIDProfileContractorPutOK) SetData(val Organization) {
	s.Data = val
}

func (*V1OrganizationsOrganizationIDProfileContractorPutOK) v1OrganizationsOrganizationIDProfileContractorPutRes() {
}

type V1OrganizationsOrganizationIDProfileContractorPutReq struct {
	Description OptDescription `json:"description"`
	// Локации заказчика.
	Cities   []int `json:"cities"`
	Services []int `json:"services"`
	Objects  []int `json:"objects"`
}

// GetDescription returns the value of Description.
func (s *V1OrganizationsOrganizationIDProfileContractorPutReq) GetDescription() OptDescription {
	return s.Description
}

// GetCities returns the value of Cities.
func (s *V1OrganizationsOrganizationIDProfileContractorPutReq) GetCities() []int {
	return s.Cities
}

// GetServices returns the value of Services.
func (s *V1OrganizationsOrganizationIDProfileContractorPutReq) GetServices() []int {
	return s.Services
}

// GetObjects returns the value of Objects.
func (s *V1OrganizationsOrganizationIDProfileContractorPutReq) GetObjects() []int {
	return s.Objects
}

// SetDescription sets the value of Description.
func (s *V1OrganizationsOrganizationIDProfileContractorPutReq) SetDescription(val OptDescription) {
	s.Description = val
}

// SetCities sets the value of Cities.
func (s *V1OrganizationsOrganizationIDProfileContractorPutReq) SetCities(val []int) {
	s.Cities = val
}

// SetServices sets the value of Services.
func (s *V1OrganizationsOrganizationIDProfileContractorPutReq) SetServices(val []int) {
	s.Services = val
}

// SetObjects sets the value of Objects.
func (s *V1OrganizationsOrganizationIDProfileContractorPutReq) SetObjects(val []int) {
	s.Objects = val
}

type V1OrganizationsOrganizationIDProfileCustomerPutOK struct {
	Data Organization `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsOrganizationIDProfileCustomerPutOK) GetData() Organization {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsOrganizationIDProfileCustomerPutOK) SetData(val Organization) {
	s.Data = val
}

func (*V1OrganizationsOrganizationIDProfileCustomerPutOK) v1OrganizationsOrganizationIDProfileCustomerPutRes() {
}

type V1OrganizationsOrganizationIDProfileCustomerPutReq struct {
	Description OptDescription `json:"description"`
	// Локаций заказчика.
	CityIds []int `json:"city_ids"`
}

// GetDescription returns the value of Description.
func (s *V1OrganizationsOrganizationIDProfileCustomerPutReq) GetDescription() OptDescription {
	return s.Description
}

// GetCityIds returns the value of CityIds.
func (s *V1OrganizationsOrganizationIDProfileCustomerPutReq) GetCityIds() []int {
	return s.CityIds
}

// SetDescription sets the value of Description.
func (s *V1OrganizationsOrganizationIDProfileCustomerPutReq) SetDescription(val OptDescription) {
	s.Description = val
}

// SetCityIds sets the value of CityIds.
func (s *V1OrganizationsOrganizationIDProfileCustomerPutReq) SetCityIds(val []int) {
	s.CityIds = val
}

type V1OrganizationsOrganizationIDTendersGetOK struct {
	Data []Tender `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsOrganizationIDTendersGetOK) GetData() []Tender {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsOrganizationIDTendersGetOK) SetData(val []Tender) {
	s.Data = val
}

func (*V1OrganizationsOrganizationIDTendersGetOK) v1OrganizationsOrganizationIDTendersGetRes() {}

type V1OrganizationsOrganizationIDVerificationsGetOK struct {
	Data []VerificationRequest `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsOrganizationIDVerificationsGetOK) GetData() []VerificationRequest {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsOrganizationIDVerificationsGetOK) SetData(val []VerificationRequest) {
	s.Data = val
}

func (*V1OrganizationsOrganizationIDVerificationsGetOK) v1OrganizationsOrganizationIDVerificationsGetRes() {
}

// V1OrganizationsOrganizationIDVerificationsPostOK is response for V1OrganizationsOrganizationIDVerificationsPost operation.
type V1OrganizationsOrganizationIDVerificationsPostOK struct{}

func (*V1OrganizationsOrganizationIDVerificationsPostOK) v1OrganizationsOrganizationIDVerificationsPostRes() {
}

// V1OrganizationsPortfolioPortfolioIDDeleteOK is response for V1OrganizationsPortfolioPortfolioIDDelete operation.
type V1OrganizationsPortfolioPortfolioIDDeleteOK struct{}

func (*V1OrganizationsPortfolioPortfolioIDDeleteOK) v1OrganizationsPortfolioPortfolioIDDeleteRes() {}

type V1OrganizationsPortfolioPortfolioIDPutOK struct {
	Data Portfolio `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsPortfolioPortfolioIDPutOK) GetData() Portfolio {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsPortfolioPortfolioIDPutOK) SetData(val Portfolio) {
	s.Data = val
}

func (*V1OrganizationsPortfolioPortfolioIDPutOK) v1OrganizationsPortfolioPortfolioIDPutRes() {}

type V1OrganizationsPortfolioPortfolioIDPutReq struct {
	Name        Name        `json:"name"`
	Description Description `json:"description"`
	Attachments []URL       `json:"attachments"`
}

// GetName returns the value of Name.
func (s *V1OrganizationsPortfolioPortfolioIDPutReq) GetName() Name {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *V1OrganizationsPortfolioPortfolioIDPutReq) GetDescription() Description {
	return s.Description
}

// GetAttachments returns the value of Attachments.
func (s *V1OrganizationsPortfolioPortfolioIDPutReq) GetAttachments() []URL {
	return s.Attachments
}

// SetName sets the value of Name.
func (s *V1OrganizationsPortfolioPortfolioIDPutReq) SetName(val Name) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *V1OrganizationsPortfolioPortfolioIDPutReq) SetDescription(val Description) {
	s.Description = val
}

// SetAttachments sets the value of Attachments.
func (s *V1OrganizationsPortfolioPortfolioIDPutReq) SetAttachments(val []URL) {
	s.Attachments = val
}

type V1OrganizationsVerificationsGetDirection string

const (
	V1OrganizationsVerificationsGetDirectionASC  V1OrganizationsVerificationsGetDirection = "ASC"
	V1OrganizationsVerificationsGetDirectionDESC V1OrganizationsVerificationsGetDirection = "DESC"
)

// AllValues returns all V1OrganizationsVerificationsGetDirection values.
func (V1OrganizationsVerificationsGetDirection) AllValues() []V1OrganizationsVerificationsGetDirection {
	return []V1OrganizationsVerificationsGetDirection{
		V1OrganizationsVerificationsGetDirectionASC,
		V1OrganizationsVerificationsGetDirectionDESC,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1OrganizationsVerificationsGetDirection) MarshalText() ([]byte, error) {
	switch s {
	case V1OrganizationsVerificationsGetDirectionASC:
		return []byte(s), nil
	case V1OrganizationsVerificationsGetDirectionDESC:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1OrganizationsVerificationsGetDirection) UnmarshalText(data []byte) error {
	switch V1OrganizationsVerificationsGetDirection(data) {
	case V1OrganizationsVerificationsGetDirectionASC:
		*s = V1OrganizationsVerificationsGetDirectionASC
		return nil
	case V1OrganizationsVerificationsGetDirectionDESC:
		*s = V1OrganizationsVerificationsGetDirectionDESC
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1OrganizationsVerificationsGetOK struct {
	Data []VerificationRequest `json:"data"`
}

// GetData returns the value of Data.
func (s *V1OrganizationsVerificationsGetOK) GetData() []VerificationRequest {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1OrganizationsVerificationsGetOK) SetData(val []VerificationRequest) {
	s.Data = val
}

func (*V1OrganizationsVerificationsGetOK) v1OrganizationsVerificationsGetRes() {}

type V1OrganizationsVerificationsGetSort string

const (
	V1OrganizationsVerificationsGetSortID V1OrganizationsVerificationsGetSort = "id"
)

// AllValues returns all V1OrganizationsVerificationsGetSort values.
func (V1OrganizationsVerificationsGetSort) AllValues() []V1OrganizationsVerificationsGetSort {
	return []V1OrganizationsVerificationsGetSort{
		V1OrganizationsVerificationsGetSortID,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1OrganizationsVerificationsGetSort) MarshalText() ([]byte, error) {
	switch s {
	case V1OrganizationsVerificationsGetSortID:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1OrganizationsVerificationsGetSort) UnmarshalText(data []byte) error {
	switch V1OrganizationsVerificationsGetSort(data) {
	case V1OrganizationsVerificationsGetSortID:
		*s = V1OrganizationsVerificationsGetSortID
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1QuestionnaireGetOK struct {
	Data []Questionnaire `json:"data"`
}

// GetData returns the value of Data.
func (s *V1QuestionnaireGetOK) GetData() []Questionnaire {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1QuestionnaireGetOK) SetData(val []Questionnaire) {
	s.Data = val
}

func (*V1QuestionnaireGetOK) v1QuestionnaireGetRes() {}

// V1QuestionnaireOrganizationIDPostOK is response for V1QuestionnaireOrganizationIDPost operation.
type V1QuestionnaireOrganizationIDPostOK struct{}

func (*V1QuestionnaireOrganizationIDPostOK) v1QuestionnaireOrganizationIDPostRes() {}

type V1QuestionnaireOrganizationIDPostReq struct {
	Answers []QuestionnaireAnswer `json:"answers"`
	// The questionnaire is completed.
	IsCompleted bool `json:"is_completed"`
}

// GetAnswers returns the value of Answers.
func (s *V1QuestionnaireOrganizationIDPostReq) GetAnswers() []QuestionnaireAnswer {
	return s.Answers
}

// GetIsCompleted returns the value of IsCompleted.
func (s *V1QuestionnaireOrganizationIDPostReq) GetIsCompleted() bool {
	return s.IsCompleted
}

// SetAnswers sets the value of Answers.
func (s *V1QuestionnaireOrganizationIDPostReq) SetAnswers(val []QuestionnaireAnswer) {
	s.Answers = val
}

// SetIsCompleted sets the value of IsCompleted.
func (s *V1QuestionnaireOrganizationIDPostReq) SetIsCompleted(val bool) {
	s.IsCompleted = val
}

type V1QuestionnaireOrganizationIDStatusGetOK struct {
	Data V1QuestionnaireOrganizationIDStatusGetOKData `json:"data"`
}

// GetData returns the value of Data.
func (s *V1QuestionnaireOrganizationIDStatusGetOK) GetData() V1QuestionnaireOrganizationIDStatusGetOKData {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1QuestionnaireOrganizationIDStatusGetOK) SetData(val V1QuestionnaireOrganizationIDStatusGetOKData) {
	s.Data = val
}

func (*V1QuestionnaireOrganizationIDStatusGetOK) v1QuestionnaireOrganizationIDStatusGetRes() {}

type V1QuestionnaireOrganizationIDStatusGetOKData struct {
	// The questionnaire is completed.
	IsCompleted bool `json:"is_completed"`
}

// GetIsCompleted returns the value of IsCompleted.
func (s *V1QuestionnaireOrganizationIDStatusGetOKData) GetIsCompleted() bool {
	return s.IsCompleted
}

// SetIsCompleted sets the value of IsCompleted.
func (s *V1QuestionnaireOrganizationIDStatusGetOKData) SetIsCompleted(val bool) {
	s.IsCompleted = val
}

type V1SuggestCityGetOK struct {
	Data []City `json:"data"`
}

// GetData returns the value of Data.
func (s *V1SuggestCityGetOK) GetData() []City {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1SuggestCityGetOK) SetData(val []City) {
	s.Data = val
}

func (*V1SuggestCityGetOK) v1SuggestCityGetRes() {}

type V1SuggestCompanyGetOK struct {
	Data V1SuggestCompanyGetOKData `json:"data"`
}

// GetData returns the value of Data.
func (s *V1SuggestCompanyGetOK) GetData() V1SuggestCompanyGetOKData {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1SuggestCompanyGetOK) SetData(val V1SuggestCompanyGetOKData) {
	s.Data = val
}

func (*V1SuggestCompanyGetOK) v1SuggestCompanyGetRes() {}

type V1SuggestCompanyGetOKData struct {
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *V1SuggestCompanyGetOKData) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *V1SuggestCompanyGetOKData) SetName(val string) {
	s.Name = val
}

// V1SurveyPostOK is response for V1SurveyPost operation.
type V1SurveyPostOK struct{}

func (*V1SurveyPostOK) v1SurveyPostRes() {}

type V1SurveyPostReq struct {
	Name     string `json:"name"`
	Type     Survey `json:"type"`
	Phone    Phone  `json:"phone"`
	Question string `json:"question"`
}

// GetName returns the value of Name.
func (s *V1SurveyPostReq) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *V1SurveyPostReq) GetType() Survey {
	return s.Type
}

// GetPhone returns the value of Phone.
func (s *V1SurveyPostReq) GetPhone() Phone {
	return s.Phone
}

// GetQuestion returns the value of Question.
func (s *V1SurveyPostReq) GetQuestion() string {
	return s.Question
}

// SetName sets the value of Name.
func (s *V1SurveyPostReq) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *V1SurveyPostReq) SetType(val Survey) {
	s.Type = val
}

// SetPhone sets the value of Phone.
func (s *V1SurveyPostReq) SetPhone(val Phone) {
	s.Phone = val
}

// SetQuestion sets the value of Question.
func (s *V1SurveyPostReq) SetQuestion(val string) {
	s.Question = val
}

type V1TendersGetDirection string

const (
	V1TendersGetDirectionASC  V1TendersGetDirection = "ASC"
	V1TendersGetDirectionDESC V1TendersGetDirection = "DESC"
)

// AllValues returns all V1TendersGetDirection values.
func (V1TendersGetDirection) AllValues() []V1TendersGetDirection {
	return []V1TendersGetDirection{
		V1TendersGetDirectionASC,
		V1TendersGetDirectionDESC,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1TendersGetDirection) MarshalText() ([]byte, error) {
	switch s {
	case V1TendersGetDirectionASC:
		return []byte(s), nil
	case V1TendersGetDirectionDESC:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1TendersGetDirection) UnmarshalText(data []byte) error {
	switch V1TendersGetDirection(data) {
	case V1TendersGetDirectionASC:
		*s = V1TendersGetDirectionASC
		return nil
	case V1TendersGetDirectionDESC:
		*s = V1TendersGetDirectionDESC
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1TendersGetOK struct {
	Data []Tender `json:"data"`
}

// GetData returns the value of Data.
func (s *V1TendersGetOK) GetData() []Tender {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1TendersGetOK) SetData(val []Tender) {
	s.Data = val
}

func (*V1TendersGetOK) v1TendersGetRes() {}

type V1TendersGetSort string

const (
	V1TendersGetSortID V1TendersGetSort = "id"
)

// AllValues returns all V1TendersGetSort values.
func (V1TendersGetSort) AllValues() []V1TendersGetSort {
	return []V1TendersGetSort{
		V1TendersGetSortID,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1TendersGetSort) MarshalText() ([]byte, error) {
	switch s {
	case V1TendersGetSortID:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1TendersGetSort) UnmarshalText(data []byte) error {
	switch V1TendersGetSort(data) {
	case V1TendersGetSortID:
		*s = V1TendersGetSortID
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1TendersPostCreated struct {
	Data Tender `json:"data"`
}

// GetData returns the value of Data.
func (s *V1TendersPostCreated) GetData() Tender {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1TendersPostCreated) SetData(val Tender) {
	s.Data = val
}

func (*V1TendersPostCreated) v1TendersPostRes() {}

type V1TendersPostReq struct {
	Name            string    `json:"name"`
	City            int       `json:"city"`
	Price           float64   `json:"price"`
	IsContractPrice bool      `json:"is_contract_price"`
	IsNdsPrice      bool      `json:"is_nds_price"`
	FloorSpace      int       `json:"floor_space"`
	Description     OptString `json:"description"`
	Wishes          OptString `json:"wishes"`
	Specification   OptURL    `json:"specification"`
	Attachments     []URL     `json:"attachments"`
	Services        []int     `json:"services"`
	Objects         []int     `json:"objects"`
	IsDraft         OptBool   `json:"is_draft"`
	// Дата начала приема заявок.
	ReceptionStart time.Time `json:"reception_start"`
	// Дата окончания приема заявок.
	ReceptionEnd time.Time `json:"reception_end"`
	WorkStart    time.Time `json:"work_start"`
	WorkEnd      time.Time `json:"work_end"`
}

// GetName returns the value of Name.
func (s *V1TendersPostReq) GetName() string {
	return s.Name
}

// GetCity returns the value of City.
func (s *V1TendersPostReq) GetCity() int {
	return s.City
}

// GetPrice returns the value of Price.
func (s *V1TendersPostReq) GetPrice() float64 {
	return s.Price
}

// GetIsContractPrice returns the value of IsContractPrice.
func (s *V1TendersPostReq) GetIsContractPrice() bool {
	return s.IsContractPrice
}

// GetIsNdsPrice returns the value of IsNdsPrice.
func (s *V1TendersPostReq) GetIsNdsPrice() bool {
	return s.IsNdsPrice
}

// GetFloorSpace returns the value of FloorSpace.
func (s *V1TendersPostReq) GetFloorSpace() int {
	return s.FloorSpace
}

// GetDescription returns the value of Description.
func (s *V1TendersPostReq) GetDescription() OptString {
	return s.Description
}

// GetWishes returns the value of Wishes.
func (s *V1TendersPostReq) GetWishes() OptString {
	return s.Wishes
}

// GetSpecification returns the value of Specification.
func (s *V1TendersPostReq) GetSpecification() OptURL {
	return s.Specification
}

// GetAttachments returns the value of Attachments.
func (s *V1TendersPostReq) GetAttachments() []URL {
	return s.Attachments
}

// GetServices returns the value of Services.
func (s *V1TendersPostReq) GetServices() []int {
	return s.Services
}

// GetObjects returns the value of Objects.
func (s *V1TendersPostReq) GetObjects() []int {
	return s.Objects
}

// GetIsDraft returns the value of IsDraft.
func (s *V1TendersPostReq) GetIsDraft() OptBool {
	return s.IsDraft
}

// GetReceptionStart returns the value of ReceptionStart.
func (s *V1TendersPostReq) GetReceptionStart() time.Time {
	return s.ReceptionStart
}

// GetReceptionEnd returns the value of ReceptionEnd.
func (s *V1TendersPostReq) GetReceptionEnd() time.Time {
	return s.ReceptionEnd
}

// GetWorkStart returns the value of WorkStart.
func (s *V1TendersPostReq) GetWorkStart() time.Time {
	return s.WorkStart
}

// GetWorkEnd returns the value of WorkEnd.
func (s *V1TendersPostReq) GetWorkEnd() time.Time {
	return s.WorkEnd
}

// SetName sets the value of Name.
func (s *V1TendersPostReq) SetName(val string) {
	s.Name = val
}

// SetCity sets the value of City.
func (s *V1TendersPostReq) SetCity(val int) {
	s.City = val
}

// SetPrice sets the value of Price.
func (s *V1TendersPostReq) SetPrice(val float64) {
	s.Price = val
}

// SetIsContractPrice sets the value of IsContractPrice.
func (s *V1TendersPostReq) SetIsContractPrice(val bool) {
	s.IsContractPrice = val
}

// SetIsNdsPrice sets the value of IsNdsPrice.
func (s *V1TendersPostReq) SetIsNdsPrice(val bool) {
	s.IsNdsPrice = val
}

// SetFloorSpace sets the value of FloorSpace.
func (s *V1TendersPostReq) SetFloorSpace(val int) {
	s.FloorSpace = val
}

// SetDescription sets the value of Description.
func (s *V1TendersPostReq) SetDescription(val OptString) {
	s.Description = val
}

// SetWishes sets the value of Wishes.
func (s *V1TendersPostReq) SetWishes(val OptString) {
	s.Wishes = val
}

// SetSpecification sets the value of Specification.
func (s *V1TendersPostReq) SetSpecification(val OptURL) {
	s.Specification = val
}

// SetAttachments sets the value of Attachments.
func (s *V1TendersPostReq) SetAttachments(val []URL) {
	s.Attachments = val
}

// SetServices sets the value of Services.
func (s *V1TendersPostReq) SetServices(val []int) {
	s.Services = val
}

// SetObjects sets the value of Objects.
func (s *V1TendersPostReq) SetObjects(val []int) {
	s.Objects = val
}

// SetIsDraft sets the value of IsDraft.
func (s *V1TendersPostReq) SetIsDraft(val OptBool) {
	s.IsDraft = val
}

// SetReceptionStart sets the value of ReceptionStart.
func (s *V1TendersPostReq) SetReceptionStart(val time.Time) {
	s.ReceptionStart = val
}

// SetReceptionEnd sets the value of ReceptionEnd.
func (s *V1TendersPostReq) SetReceptionEnd(val time.Time) {
	s.ReceptionEnd = val
}

// SetWorkStart sets the value of WorkStart.
func (s *V1TendersPostReq) SetWorkStart(val time.Time) {
	s.WorkStart = val
}

// SetWorkEnd sets the value of WorkEnd.
func (s *V1TendersPostReq) SetWorkEnd(val time.Time) {
	s.WorkEnd = val
}

type V1TendersTenderIDCommentsGetOK struct {
	Data []Comment `json:"data"`
}

// GetData returns the value of Data.
func (s *V1TendersTenderIDCommentsGetOK) GetData() []Comment {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1TendersTenderIDCommentsGetOK) SetData(val []Comment) {
	s.Data = val
}

func (*V1TendersTenderIDCommentsGetOK) v1TendersTenderIDCommentsGetRes() {}

// V1TendersTenderIDCommentsPostOK is response for V1TendersTenderIDCommentsPost operation.
type V1TendersTenderIDCommentsPostOK struct{}

func (*V1TendersTenderIDCommentsPostOK) v1TendersTenderIDCommentsPostRes() {}

type V1TendersTenderIDCommentsPostReq struct {
	Title       string   `json:"title"`
	Content     string   `json:"content"`
	Attachments []string `json:"attachments"`
}

// GetTitle returns the value of Title.
func (s *V1TendersTenderIDCommentsPostReq) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *V1TendersTenderIDCommentsPostReq) GetContent() string {
	return s.Content
}

// GetAttachments returns the value of Attachments.
func (s *V1TendersTenderIDCommentsPostReq) GetAttachments() []string {
	return s.Attachments
}

// SetTitle sets the value of Title.
func (s *V1TendersTenderIDCommentsPostReq) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *V1TendersTenderIDCommentsPostReq) SetContent(val string) {
	s.Content = val
}

// SetAttachments sets the value of Attachments.
func (s *V1TendersTenderIDCommentsPostReq) SetAttachments(val []string) {
	s.Attachments = val
}

type V1TendersTenderIDGetOK struct {
	Data Tender `json:"data"`
}

// GetData returns the value of Data.
func (s *V1TendersTenderIDGetOK) GetData() Tender {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1TendersTenderIDGetOK) SetData(val Tender) {
	s.Data = val
}

func (*V1TendersTenderIDGetOK) v1TendersTenderIDGetRes() {}

type V1TendersTenderIDPutOK struct {
	Data Tender `json:"data"`
}

// GetData returns the value of Data.
func (s *V1TendersTenderIDPutOK) GetData() Tender {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1TendersTenderIDPutOK) SetData(val Tender) {
	s.Data = val
}

func (*V1TendersTenderIDPutOK) v1TendersTenderIDPutRes() {}

type V1TendersTenderIDPutReq struct {
	Name            OptString  `json:"name"`
	City            OptInt     `json:"city"`
	Price           OptFloat64 `json:"price"`
	IsContractPrice OptBool    `json:"is_contract_price"`
	IsNdsPrice      OptBool    `json:"is_nds_price"`
	FloorSpace      OptInt     `json:"floor_space"`
	Description     OptString  `json:"description"`
	Wishes          OptString  `json:"wishes"`
	Specification   OptURL     `json:"specification"`
	Attachments     []URL      `json:"attachments"`
	Services        []int      `json:"services"`
	Objects         []int      `json:"objects"`
	IsDraft         OptBool    `json:"is_draft"`
	// Дата начала приема заявок.
	ReceptionStart OptDateTime `json:"reception_start"`
	// Дата окончания приема заявок.
	ReceptionEnd OptDateTime `json:"reception_end"`
	WorkStart    OptDateTime `json:"work_start"`
	WorkEnd      OptDateTime `json:"work_end"`
}

// GetName returns the value of Name.
func (s *V1TendersTenderIDPutReq) GetName() OptString {
	return s.Name
}

// GetCity returns the value of City.
func (s *V1TendersTenderIDPutReq) GetCity() OptInt {
	return s.City
}

// GetPrice returns the value of Price.
func (s *V1TendersTenderIDPutReq) GetPrice() OptFloat64 {
	return s.Price
}

// GetIsContractPrice returns the value of IsContractPrice.
func (s *V1TendersTenderIDPutReq) GetIsContractPrice() OptBool {
	return s.IsContractPrice
}

// GetIsNdsPrice returns the value of IsNdsPrice.
func (s *V1TendersTenderIDPutReq) GetIsNdsPrice() OptBool {
	return s.IsNdsPrice
}

// GetFloorSpace returns the value of FloorSpace.
func (s *V1TendersTenderIDPutReq) GetFloorSpace() OptInt {
	return s.FloorSpace
}

// GetDescription returns the value of Description.
func (s *V1TendersTenderIDPutReq) GetDescription() OptString {
	return s.Description
}

// GetWishes returns the value of Wishes.
func (s *V1TendersTenderIDPutReq) GetWishes() OptString {
	return s.Wishes
}

// GetSpecification returns the value of Specification.
func (s *V1TendersTenderIDPutReq) GetSpecification() OptURL {
	return s.Specification
}

// GetAttachments returns the value of Attachments.
func (s *V1TendersTenderIDPutReq) GetAttachments() []URL {
	return s.Attachments
}

// GetServices returns the value of Services.
func (s *V1TendersTenderIDPutReq) GetServices() []int {
	return s.Services
}

// GetObjects returns the value of Objects.
func (s *V1TendersTenderIDPutReq) GetObjects() []int {
	return s.Objects
}

// GetIsDraft returns the value of IsDraft.
func (s *V1TendersTenderIDPutReq) GetIsDraft() OptBool {
	return s.IsDraft
}

// GetReceptionStart returns the value of ReceptionStart.
func (s *V1TendersTenderIDPutReq) GetReceptionStart() OptDateTime {
	return s.ReceptionStart
}

// GetReceptionEnd returns the value of ReceptionEnd.
func (s *V1TendersTenderIDPutReq) GetReceptionEnd() OptDateTime {
	return s.ReceptionEnd
}

// GetWorkStart returns the value of WorkStart.
func (s *V1TendersTenderIDPutReq) GetWorkStart() OptDateTime {
	return s.WorkStart
}

// GetWorkEnd returns the value of WorkEnd.
func (s *V1TendersTenderIDPutReq) GetWorkEnd() OptDateTime {
	return s.WorkEnd
}

// SetName sets the value of Name.
func (s *V1TendersTenderIDPutReq) SetName(val OptString) {
	s.Name = val
}

// SetCity sets the value of City.
func (s *V1TendersTenderIDPutReq) SetCity(val OptInt) {
	s.City = val
}

// SetPrice sets the value of Price.
func (s *V1TendersTenderIDPutReq) SetPrice(val OptFloat64) {
	s.Price = val
}

// SetIsContractPrice sets the value of IsContractPrice.
func (s *V1TendersTenderIDPutReq) SetIsContractPrice(val OptBool) {
	s.IsContractPrice = val
}

// SetIsNdsPrice sets the value of IsNdsPrice.
func (s *V1TendersTenderIDPutReq) SetIsNdsPrice(val OptBool) {
	s.IsNdsPrice = val
}

// SetFloorSpace sets the value of FloorSpace.
func (s *V1TendersTenderIDPutReq) SetFloorSpace(val OptInt) {
	s.FloorSpace = val
}

// SetDescription sets the value of Description.
func (s *V1TendersTenderIDPutReq) SetDescription(val OptString) {
	s.Description = val
}

// SetWishes sets the value of Wishes.
func (s *V1TendersTenderIDPutReq) SetWishes(val OptString) {
	s.Wishes = val
}

// SetSpecification sets the value of Specification.
func (s *V1TendersTenderIDPutReq) SetSpecification(val OptURL) {
	s.Specification = val
}

// SetAttachments sets the value of Attachments.
func (s *V1TendersTenderIDPutReq) SetAttachments(val []URL) {
	s.Attachments = val
}

// SetServices sets the value of Services.
func (s *V1TendersTenderIDPutReq) SetServices(val []int) {
	s.Services = val
}

// SetObjects sets the value of Objects.
func (s *V1TendersTenderIDPutReq) SetObjects(val []int) {
	s.Objects = val
}

// SetIsDraft sets the value of IsDraft.
func (s *V1TendersTenderIDPutReq) SetIsDraft(val OptBool) {
	s.IsDraft = val
}

// SetReceptionStart sets the value of ReceptionStart.
func (s *V1TendersTenderIDPutReq) SetReceptionStart(val OptDateTime) {
	s.ReceptionStart = val
}

// SetReceptionEnd sets the value of ReceptionEnd.
func (s *V1TendersTenderIDPutReq) SetReceptionEnd(val OptDateTime) {
	s.ReceptionEnd = val
}

// SetWorkStart sets the value of WorkStart.
func (s *V1TendersTenderIDPutReq) SetWorkStart(val OptDateTime) {
	s.WorkStart = val
}

// SetWorkEnd sets the value of WorkEnd.
func (s *V1TendersTenderIDPutReq) SetWorkEnd(val OptDateTime) {
	s.WorkEnd = val
}

// V1TendersTenderIDRespondPostOK is response for V1TendersTenderIDRespondPost operation.
type V1TendersTenderIDRespondPostOK struct{}

func (*V1TendersTenderIDRespondPostOK) v1TendersTenderIDRespondPostRes() {}

type V1TendersTenderIDRespondPostReq struct {
	Price int  `json:"price"`
	IsNds bool `json:"is_nds"`
}

// GetPrice returns the value of Price.
func (s *V1TendersTenderIDRespondPostReq) GetPrice() int {
	return s.Price
}

// GetIsNds returns the value of IsNds.
func (s *V1TendersTenderIDRespondPostReq) GetIsNds() bool {
	return s.IsNds
}

// SetPrice sets the value of Price.
func (s *V1TendersTenderIDRespondPostReq) SetPrice(val int) {
	s.Price = val
}

// SetIsNds sets the value of IsNds.
func (s *V1TendersTenderIDRespondPostReq) SetIsNds(val bool) {
	s.IsNds = val
}

type V1TendersVerificationsGetDirection string

const (
	V1TendersVerificationsGetDirectionASC  V1TendersVerificationsGetDirection = "ASC"
	V1TendersVerificationsGetDirectionDESC V1TendersVerificationsGetDirection = "DESC"
)

// AllValues returns all V1TendersVerificationsGetDirection values.
func (V1TendersVerificationsGetDirection) AllValues() []V1TendersVerificationsGetDirection {
	return []V1TendersVerificationsGetDirection{
		V1TendersVerificationsGetDirectionASC,
		V1TendersVerificationsGetDirectionDESC,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1TendersVerificationsGetDirection) MarshalText() ([]byte, error) {
	switch s {
	case V1TendersVerificationsGetDirectionASC:
		return []byte(s), nil
	case V1TendersVerificationsGetDirectionDESC:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1TendersVerificationsGetDirection) UnmarshalText(data []byte) error {
	switch V1TendersVerificationsGetDirection(data) {
	case V1TendersVerificationsGetDirectionASC:
		*s = V1TendersVerificationsGetDirectionASC
		return nil
	case V1TendersVerificationsGetDirectionDESC:
		*s = V1TendersVerificationsGetDirectionDESC
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1TendersVerificationsGetOK struct {
	Data []VerificationRequest `json:"data"`
}

// GetData returns the value of Data.
func (s *V1TendersVerificationsGetOK) GetData() []VerificationRequest {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1TendersVerificationsGetOK) SetData(val []VerificationRequest) {
	s.Data = val
}

func (*V1TendersVerificationsGetOK) v1TendersVerificationsGetRes() {}

type V1TendersVerificationsGetSort string

const (
	V1TendersVerificationsGetSortID V1TendersVerificationsGetSort = "id"
)

// AllValues returns all V1TendersVerificationsGetSort values.
func (V1TendersVerificationsGetSort) AllValues() []V1TendersVerificationsGetSort {
	return []V1TendersVerificationsGetSort{
		V1TendersVerificationsGetSortID,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1TendersVerificationsGetSort) MarshalText() ([]byte, error) {
	switch s {
	case V1TendersVerificationsGetSortID:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1TendersVerificationsGetSort) UnmarshalText(data []byte) error {
	switch V1TendersVerificationsGetSort(data) {
	case V1TendersVerificationsGetSortID:
		*s = V1TendersVerificationsGetSortID
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// V1UsersConfirmEmailPostOK is response for V1UsersConfirmEmailPost operation.
type V1UsersConfirmEmailPostOK struct{}

func (*V1UsersConfirmEmailPostOK) v1UsersConfirmEmailPostRes() {}

type V1UsersConfirmEmailPostReq struct {
	UserID OptInt `json:"user_id"`
	Code   string `json:"code"`
}

// GetUserID returns the value of UserID.
func (s *V1UsersConfirmEmailPostReq) GetUserID() OptInt {
	return s.UserID
}

// GetCode returns the value of Code.
func (s *V1UsersConfirmEmailPostReq) GetCode() string {
	return s.Code
}

// SetUserID sets the value of UserID.
func (s *V1UsersConfirmEmailPostReq) SetUserID(val OptInt) {
	s.UserID = val
}

// SetCode sets the value of Code.
func (s *V1UsersConfirmEmailPostReq) SetCode(val string) {
	s.Code = val
}

// V1UsersConfirmPasswordPostOK is response for V1UsersConfirmPasswordPost operation.
type V1UsersConfirmPasswordPostOK struct{}

func (*V1UsersConfirmPasswordPostOK) v1UsersConfirmPasswordPostRes() {}

type V1UsersConfirmPasswordPostReq struct {
	UserID   OptInt   `json:"user_id"`
	Code     string   `json:"code"`
	Password Password `json:"password"`
}

// GetUserID returns the value of UserID.
func (s *V1UsersConfirmPasswordPostReq) GetUserID() OptInt {
	return s.UserID
}

// GetCode returns the value of Code.
func (s *V1UsersConfirmPasswordPostReq) GetCode() string {
	return s.Code
}

// GetPassword returns the value of Password.
func (s *V1UsersConfirmPasswordPostReq) GetPassword() Password {
	return s.Password
}

// SetUserID sets the value of UserID.
func (s *V1UsersConfirmPasswordPostReq) SetUserID(val OptInt) {
	s.UserID = val
}

// SetCode sets the value of Code.
func (s *V1UsersConfirmPasswordPostReq) SetCode(val string) {
	s.Code = val
}

// SetPassword sets the value of Password.
func (s *V1UsersConfirmPasswordPostReq) SetPassword(val Password) {
	s.Password = val
}

type V1UsersGetDirection string

const (
	V1UsersGetDirectionASC  V1UsersGetDirection = "ASC"
	V1UsersGetDirectionDESC V1UsersGetDirection = "DESC"
)

// AllValues returns all V1UsersGetDirection values.
func (V1UsersGetDirection) AllValues() []V1UsersGetDirection {
	return []V1UsersGetDirection{
		V1UsersGetDirectionASC,
		V1UsersGetDirectionDESC,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1UsersGetDirection) MarshalText() ([]byte, error) {
	switch s {
	case V1UsersGetDirectionASC:
		return []byte(s), nil
	case V1UsersGetDirectionDESC:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1UsersGetDirection) UnmarshalText(data []byte) error {
	switch V1UsersGetDirection(data) {
	case V1UsersGetDirectionASC:
		*s = V1UsersGetDirectionASC
		return nil
	case V1UsersGetDirectionDESC:
		*s = V1UsersGetDirectionDESC
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type V1UsersGetOK struct {
	Data []V1UsersGetOKDataItem `json:"data"`
}

// GetData returns the value of Data.
func (s *V1UsersGetOK) GetData() []V1UsersGetOKDataItem {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1UsersGetOK) SetData(val []V1UsersGetOKDataItem) {
	s.Data = val
}

func (*V1UsersGetOK) v1UsersGetRes() {}

// V1UsersGetOKDataItem represents sum type.
type V1UsersGetOKDataItem struct {
	Type         V1UsersGetOKDataItemType // switch on this field
	RegularUser  RegularUser
	EmployeeUser EmployeeUser
}

// V1UsersGetOKDataItemType is oneOf type of V1UsersGetOKDataItem.
type V1UsersGetOKDataItemType string

// Possible values for V1UsersGetOKDataItemType.
const (
	RegularUserV1UsersGetOKDataItem  V1UsersGetOKDataItemType = "RegularUser"
	EmployeeUserV1UsersGetOKDataItem V1UsersGetOKDataItemType = "EmployeeUser"
)

// IsRegularUser reports whether V1UsersGetOKDataItem is RegularUser.
func (s V1UsersGetOKDataItem) IsRegularUser() bool { return s.Type == RegularUserV1UsersGetOKDataItem }

// IsEmployeeUser reports whether V1UsersGetOKDataItem is EmployeeUser.
func (s V1UsersGetOKDataItem) IsEmployeeUser() bool {
	return s.Type == EmployeeUserV1UsersGetOKDataItem
}

// SetRegularUser sets V1UsersGetOKDataItem to RegularUser.
func (s *V1UsersGetOKDataItem) SetRegularUser(v RegularUser) {
	s.Type = RegularUserV1UsersGetOKDataItem
	s.RegularUser = v
}

// GetRegularUser returns RegularUser and true boolean if V1UsersGetOKDataItem is RegularUser.
func (s V1UsersGetOKDataItem) GetRegularUser() (v RegularUser, ok bool) {
	if !s.IsRegularUser() {
		return v, false
	}
	return s.RegularUser, true
}

// NewRegularUserV1UsersGetOKDataItem returns new V1UsersGetOKDataItem from RegularUser.
func NewRegularUserV1UsersGetOKDataItem(v RegularUser) V1UsersGetOKDataItem {
	var s V1UsersGetOKDataItem
	s.SetRegularUser(v)
	return s
}

// SetEmployeeUser sets V1UsersGetOKDataItem to EmployeeUser.
func (s *V1UsersGetOKDataItem) SetEmployeeUser(v EmployeeUser) {
	s.Type = EmployeeUserV1UsersGetOKDataItem
	s.EmployeeUser = v
}

// GetEmployeeUser returns EmployeeUser and true boolean if V1UsersGetOKDataItem is EmployeeUser.
func (s V1UsersGetOKDataItem) GetEmployeeUser() (v EmployeeUser, ok bool) {
	if !s.IsEmployeeUser() {
		return v, false
	}
	return s.EmployeeUser, true
}

// NewEmployeeUserV1UsersGetOKDataItem returns new V1UsersGetOKDataItem from EmployeeUser.
func NewEmployeeUserV1UsersGetOKDataItem(v EmployeeUser) V1UsersGetOKDataItem {
	var s V1UsersGetOKDataItem
	s.SetEmployeeUser(v)
	return s
}

type V1UsersGetSort string

const (
	V1UsersGetSortID V1UsersGetSort = "id"
)

// AllValues returns all V1UsersGetSort values.
func (V1UsersGetSort) AllValues() []V1UsersGetSort {
	return []V1UsersGetSort{
		V1UsersGetSortID,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s V1UsersGetSort) MarshalText() ([]byte, error) {
	switch s {
	case V1UsersGetSortID:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *V1UsersGetSort) UnmarshalText(data []byte) error {
	switch V1UsersGetSort(data) {
	case V1UsersGetSortID:
		*s = V1UsersGetSortID
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// V1UsersRequestEmailVerificationPostOK is response for V1UsersRequestEmailVerificationPost operation.
type V1UsersRequestEmailVerificationPostOK struct{}

func (*V1UsersRequestEmailVerificationPostOK) v1UsersRequestEmailVerificationPostRes() {}

type V1UsersRequestEmailVerificationPostReq struct {
	Email Email `json:"email"`
}

// GetEmail returns the value of Email.
func (s *V1UsersRequestEmailVerificationPostReq) GetEmail() Email {
	return s.Email
}

// SetEmail sets the value of Email.
func (s *V1UsersRequestEmailVerificationPostReq) SetEmail(val Email) {
	s.Email = val
}

// V1UsersRequestResetPasswordPostOK is response for V1UsersRequestResetPasswordPost operation.
type V1UsersRequestResetPasswordPostOK struct{}

func (*V1UsersRequestResetPasswordPostOK) v1UsersRequestResetPasswordPostRes() {}

type V1UsersRequestResetPasswordPostReq struct {
	Email Email `json:"email"`
}

// GetEmail returns the value of Email.
func (s *V1UsersRequestResetPasswordPostReq) GetEmail() Email {
	return s.Email
}

// SetEmail sets the value of Email.
func (s *V1UsersRequestResetPasswordPostReq) SetEmail(val Email) {
	s.Email = val
}

type V1UsersUserIDGetOK struct {
	Data RegularUser `json:"data"`
}

// GetData returns the value of Data.
func (s *V1UsersUserIDGetOK) GetData() RegularUser {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1UsersUserIDGetOK) SetData(val RegularUser) {
	s.Data = val
}

func (*V1UsersUserIDGetOK) v1UsersUserIDGetRes() {}

// V1UsersUserIDPutOK is response for V1UsersUserIDPut operation.
type V1UsersUserIDPutOK struct{}

func (*V1UsersUserIDPutOK) v1UsersUserIDPutRes() {}

type V1UsersUserIDPutReq struct {
	FirstName  OptName  `json:"first_name"`
	LastName   OptName  `json:"last_name"`
	MiddleName OptName  `json:"middle_name"`
	Phone      OptPhone `json:"phone"`
	AvatarURL  OptURL   `json:"avatar_url"`
}

// GetFirstName returns the value of FirstName.
func (s *V1UsersUserIDPutReq) GetFirstName() OptName {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *V1UsersUserIDPutReq) GetLastName() OptName {
	return s.LastName
}

// GetMiddleName returns the value of MiddleName.
func (s *V1UsersUserIDPutReq) GetMiddleName() OptName {
	return s.MiddleName
}

// GetPhone returns the value of Phone.
func (s *V1UsersUserIDPutReq) GetPhone() OptPhone {
	return s.Phone
}

// GetAvatarURL returns the value of AvatarURL.
func (s *V1UsersUserIDPutReq) GetAvatarURL() OptURL {
	return s.AvatarURL
}

// SetFirstName sets the value of FirstName.
func (s *V1UsersUserIDPutReq) SetFirstName(val OptName) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *V1UsersUserIDPutReq) SetLastName(val OptName) {
	s.LastName = val
}

// SetMiddleName sets the value of MiddleName.
func (s *V1UsersUserIDPutReq) SetMiddleName(val OptName) {
	s.MiddleName = val
}

// SetPhone sets the value of Phone.
func (s *V1UsersUserIDPutReq) SetPhone(val OptPhone) {
	s.Phone = val
}

// SetAvatarURL sets the value of AvatarURL.
func (s *V1UsersUserIDPutReq) SetAvatarURL(val OptURL) {
	s.AvatarURL = val
}

// V1VerificationsRequestIDAprovePostOK is response for V1VerificationsRequestIDAprovePost operation.
type V1VerificationsRequestIDAprovePostOK struct{}

func (*V1VerificationsRequestIDAprovePostOK) v1VerificationsRequestIDAprovePostRes() {}

// V1VerificationsRequestIDDenyPostOK is response for V1VerificationsRequestIDDenyPost operation.
type V1VerificationsRequestIDDenyPostOK struct{}

func (*V1VerificationsRequestIDDenyPostOK) v1VerificationsRequestIDDenyPostRes() {}

type V1VerificationsRequestIDGetOK struct {
	Data VerificationRequest `json:"data"`
}

// GetData returns the value of Data.
func (s *V1VerificationsRequestIDGetOK) GetData() VerificationRequest {
	return s.Data
}

// SetData sets the value of Data.
func (s *V1VerificationsRequestIDGetOK) SetData(val VerificationRequest) {
	s.Data = val
}

func (*V1VerificationsRequestIDGetOK) v1VerificationsRequestIDGetRes() {}

// Ref: #
type VerificationRequest struct {
	ID            int                       `json:"id"`
	Reviewer      OptEmployeeUser           `json:"reviewer"`
	ObjectType    ObjectType                `json:"object_type"`
	Object        VerificationRequestObject `json:"object"`
	Content       string                    `json:"content"`
	Attachments   []Attachment              `json:"attachments"`
	Status        VerificationStatus        `json:"status"`
	ReviewComment OptString                 `json:"review_comment"`
	CreatedAt     time.Time                 `json:"created_at"`
	ReviewedAt    OptDateTime               `json:"reviewed_at"`
}

// GetID returns the value of ID.
func (s *VerificationRequest) GetID() int {
	return s.ID
}

// GetReviewer returns the value of Reviewer.
func (s *VerificationRequest) GetReviewer() OptEmployeeUser {
	return s.Reviewer
}

// GetObjectType returns the value of ObjectType.
func (s *VerificationRequest) GetObjectType() ObjectType {
	return s.ObjectType
}

// GetObject returns the value of Object.
func (s *VerificationRequest) GetObject() VerificationRequestObject {
	return s.Object
}

// GetContent returns the value of Content.
func (s *VerificationRequest) GetContent() string {
	return s.Content
}

// GetAttachments returns the value of Attachments.
func (s *VerificationRequest) GetAttachments() []Attachment {
	return s.Attachments
}

// GetStatus returns the value of Status.
func (s *VerificationRequest) GetStatus() VerificationStatus {
	return s.Status
}

// GetReviewComment returns the value of ReviewComment.
func (s *VerificationRequest) GetReviewComment() OptString {
	return s.ReviewComment
}

// GetCreatedAt returns the value of CreatedAt.
func (s *VerificationRequest) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetReviewedAt returns the value of ReviewedAt.
func (s *VerificationRequest) GetReviewedAt() OptDateTime {
	return s.ReviewedAt
}

// SetID sets the value of ID.
func (s *VerificationRequest) SetID(val int) {
	s.ID = val
}

// SetReviewer sets the value of Reviewer.
func (s *VerificationRequest) SetReviewer(val OptEmployeeUser) {
	s.Reviewer = val
}

// SetObjectType sets the value of ObjectType.
func (s *VerificationRequest) SetObjectType(val ObjectType) {
	s.ObjectType = val
}

// SetObject sets the value of Object.
func (s *VerificationRequest) SetObject(val VerificationRequestObject) {
	s.Object = val
}

// SetContent sets the value of Content.
func (s *VerificationRequest) SetContent(val string) {
	s.Content = val
}

// SetAttachments sets the value of Attachments.
func (s *VerificationRequest) SetAttachments(val []Attachment) {
	s.Attachments = val
}

// SetStatus sets the value of Status.
func (s *VerificationRequest) SetStatus(val VerificationStatus) {
	s.Status = val
}

// SetReviewComment sets the value of ReviewComment.
func (s *VerificationRequest) SetReviewComment(val OptString) {
	s.ReviewComment = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *VerificationRequest) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetReviewedAt sets the value of ReviewedAt.
func (s *VerificationRequest) SetReviewedAt(val OptDateTime) {
	s.ReviewedAt = val
}

// VerificationRequestObject represents sum type.
type VerificationRequestObject struct {
	Type         VerificationRequestObjectType // switch on this field
	Comment      Comment
	Tender       Tender
	Organization Organization
}

// VerificationRequestObjectType is oneOf type of VerificationRequestObject.
type VerificationRequestObjectType string

// Possible values for VerificationRequestObjectType.
const (
	CommentVerificationRequestObject      VerificationRequestObjectType = "Comment"
	TenderVerificationRequestObject       VerificationRequestObjectType = "Tender"
	OrganizationVerificationRequestObject VerificationRequestObjectType = "Organization"
)

// IsComment reports whether VerificationRequestObject is Comment.
func (s VerificationRequestObject) IsComment() bool {
	return s.Type == CommentVerificationRequestObject
}

// IsTender reports whether VerificationRequestObject is Tender.
func (s VerificationRequestObject) IsTender() bool { return s.Type == TenderVerificationRequestObject }

// IsOrganization reports whether VerificationRequestObject is Organization.
func (s VerificationRequestObject) IsOrganization() bool {
	return s.Type == OrganizationVerificationRequestObject
}

// SetComment sets VerificationRequestObject to Comment.
func (s *VerificationRequestObject) SetComment(v Comment) {
	s.Type = CommentVerificationRequestObject
	s.Comment = v
}

// GetComment returns Comment and true boolean if VerificationRequestObject is Comment.
func (s VerificationRequestObject) GetComment() (v Comment, ok bool) {
	if !s.IsComment() {
		return v, false
	}
	return s.Comment, true
}

// NewCommentVerificationRequestObject returns new VerificationRequestObject from Comment.
func NewCommentVerificationRequestObject(v Comment) VerificationRequestObject {
	var s VerificationRequestObject
	s.SetComment(v)
	return s
}

// SetTender sets VerificationRequestObject to Tender.
func (s *VerificationRequestObject) SetTender(v Tender) {
	s.Type = TenderVerificationRequestObject
	s.Tender = v
}

// GetTender returns Tender and true boolean if VerificationRequestObject is Tender.
func (s VerificationRequestObject) GetTender() (v Tender, ok bool) {
	if !s.IsTender() {
		return v, false
	}
	return s.Tender, true
}

// NewTenderVerificationRequestObject returns new VerificationRequestObject from Tender.
func NewTenderVerificationRequestObject(v Tender) VerificationRequestObject {
	var s VerificationRequestObject
	s.SetTender(v)
	return s
}

// SetOrganization sets VerificationRequestObject to Organization.
func (s *VerificationRequestObject) SetOrganization(v Organization) {
	s.Type = OrganizationVerificationRequestObject
	s.Organization = v
}

// GetOrganization returns Organization and true boolean if VerificationRequestObject is Organization.
func (s VerificationRequestObject) GetOrganization() (v Organization, ok bool) {
	if !s.IsOrganization() {
		return v, false
	}
	return s.Organization, true
}

// NewOrganizationVerificationRequestObject returns new VerificationRequestObject from Organization.
func NewOrganizationVerificationRequestObject(v Organization) VerificationRequestObject {
	var s VerificationRequestObject
	s.SetOrganization(v)
	return s
}

// Ref: #
type VerificationStatus string

const (
	VerificationStatusUnverified VerificationStatus = "unverified"
	VerificationStatusInReview   VerificationStatus = "in_review"
	VerificationStatusDeclined   VerificationStatus = "declined"
	VerificationStatusApproved   VerificationStatus = "approved"
)

// AllValues returns all VerificationStatus values.
func (VerificationStatus) AllValues() []VerificationStatus {
	return []VerificationStatus{
		VerificationStatusUnverified,
		VerificationStatusInReview,
		VerificationStatusDeclined,
		VerificationStatusApproved,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s VerificationStatus) MarshalText() ([]byte, error) {
	switch s {
	case VerificationStatusUnverified:
		return []byte(s), nil
	case VerificationStatusInReview:
		return []byte(s), nil
	case VerificationStatusDeclined:
		return []byte(s), nil
	case VerificationStatusApproved:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *VerificationStatus) UnmarshalText(data []byte) error {
	switch VerificationStatus(data) {
	case VerificationStatusUnverified:
		*s = VerificationStatusUnverified
		return nil
	case VerificationStatusInReview:
		*s = VerificationStatusInReview
		return nil
	case VerificationStatusDeclined:
		*s = VerificationStatusDeclined
		return nil
	case VerificationStatusApproved:
		*s = VerificationStatusApproved
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #
type WrappedError struct {
	Error Error `json:"error"`
}

// GetError returns the value of Error.
func (s *WrappedError) GetError() Error {
	return s.Error
}

// SetError sets the value of Error.
func (s *WrappedError) SetError(val Error) {
	s.Error = val
}

openapi: 3.0.3
info:
  title: Ubrato core
  description: ubrato core oas
  version: 1.0.0
servers:
  - description: local
    url: /
  - description: dev
    url: https://api.ubrato.ru
paths:
  /v1/auth/signin:
    post:
      tags:
        - auth
      summary: Signin User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  $ref: '#/components/schemas/email'
                password:
                  $ref: '#/components/schemas/password'
      responses:
        '200':
          description: Success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: ubrato_session=7ff581a1-4dcf-4f53-a9cb-0ef408d4a7bb; Path=/; Max-Age=1727209098; HttpOnly; Secure; SameSite=Lax
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - user
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/Error'
  /v1/auth/signup:
    post:
      tags:
        - auth
      summary: Signup User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - phone
                - password
                - first_name
                - last_name
                - middle_name
                - inn
                - is_contractor
              properties:
                email:
                  $ref: '#/components/schemas/email'
                phone:
                  $ref: '#/components/schemas/phone'
                password:
                  $ref: '#/components/schemas/password'
                first_name:
                  $ref: '#/components/schemas/name'
                last_name:
                  $ref: '#/components/schemas/name'
                middle_name:
                  $ref: '#/components/schemas/name'
                avatar_url:
                  $ref: '#/components/schemas/url'
                inn:
                  $ref: '#/components/schemas/inn'
                is_contractor:
                  type: boolean
      responses:
        '201':
          description: Success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: ubrato_session=7ff581a1-4dcf-4f53-a9cb-0ef408d4a7bb; Path=/; Max-Age=1727209098; HttpOnly; Secure; SameSite=Lax
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - user
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/Error'
  /v1/auth/user:
    get:
      tags:
        - auth
      summary: Get currently authenticated user
      security:
        - cookieAuth: []
      responses:
        '201':
          description: Success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: ubrato_session=7ff581a1-4dcf-4f53-a9cb-0ef408d4a7bb; Path=/; Max-Age=1727209098; HttpOnly; Secure; SameSite=Lax
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - user
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/Error'
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: ubrato_session
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    email:
      type: string
      format: email
      example: example@ubrato.ru
    password:
      type: string
      format: password
      pattern: ^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$
    Error:
      type: object
      required:
        - code
        - message
        - details
      properties:
        code:
          type: string
          description: application-specific error code
          example: ERR_INTERNAL
        message:
          type: string
          description: error message
          example: invalid email
        details:
          type: object
          additionalProperties: true
    WrappedError:
      type: object
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/Error'
    phone:
      type: string
      format: phone
      pattern: ^\+?\d{10,14}$
    name:
      type: string
      minLength: 3
      pattern: ^[а-яА-ЯёЁ]+$
      example: Абоба
    url:
      type: string
      pattern: ^https?:\/\/[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*)$
      example: https://s3.ubrato.ru/qwerty
    role:
      type: integer
      enum:
        - 1
        - 2
      description: |
        0: Invalid
        1: User
        2: Admin
    inn:
      type: string
      pattern: ^\d{10,12}$
    okpo:
      type: string
      pattern: ^\d{8,10,14}$
    ogrn:
      type: string
      pattern: ^\d{13}$
    kpp:
      type: string
      pattern: ^\d{9}$
    tax_code:
      type: string
      pattern: ^\d+$
    Contact_info:
      type: object
      required:
        - contact
        - info
      properties:
        contact:
          type: string
          minLenght: 1
        info:
          type: string
          minLenght: 1
    Organization:
      type: object
      required:
        - id
        - brand_name
        - full_name
        - short_name
        - inn
        - okpo
        - ogrn
        - kpp
        - tax_code
        - address
        - avatar_url
        - emails
        - phones
        - messengers
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        brand_name:
          $ref: '#/components/schemas/name'
        full_name:
          $ref: '#/components/schemas/name'
        short_name:
          $ref: '#/components/schemas/name'
        inn:
          $ref: '#/components/schemas/inn'
        okpo:
          $ref: '#/components/schemas/okpo'
        ogrn:
          $ref: '#/components/schemas/ogrn'
        kpp:
          $ref: '#/components/schemas/kpp'
        tax_code:
          $ref: '#/components/schemas/tax_code'
        address:
          type: string
        avatar_url:
          $ref: '#/components/schemas/url'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Contact_info'
        phones:
          type: array
          items:
            $ref: '#/components/schemas/Contact_info'
        messengers:
          type: array
          items:
            $ref: '#/components/schemas/Contact_info'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    User:
      type: object
      required:
        - id
        - email
        - phone
        - first_name
        - last_name
        - middle_name
        - avatar_url
        - verified
        - email_verified
        - role
        - is_contractor
        - is_banned
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        email:
          $ref: '#/components/schemas/email'
        phone:
          $ref: '#/components/schemas/phone'
        first_name:
          $ref: '#/components/schemas/name'
        last_name:
          $ref: '#/components/schemas/name'
        middle_name:
          $ref: '#/components/schemas/name'
        avatar_url:
          $ref: '#/components/schemas/url'
        verified:
          type: boolean
        email_verified:
          type: boolean
        role:
          $ref: '#/components/schemas/role'
        is_contractor:
          type: boolean
        is_banned:
          type: boolean
        organization:
          $ref: '#/components/schemas/Organization'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WrappedError'

openapi: 3.1.0
info:
  title: Ubrato core
  description: ubrato core oas
  version: 1.0.0
servers:
  - description: local
    url: /
  - description: dev
    url: https://api.ubrato.ru
paths:
  /v1/auth/signin:
    post:
      tags:
        - auth
      summary: Signin User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: refresh_token=7ff581a1-4dcf-4f53-a9cb-0ef408d4a7bb; Path=/; Max-Age=1727209098; HttpOnly; Secure; SameSite=Lax
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                properties:
                  access_token:
                    type: string
        default:
          $ref: '#/components/responses/Error'
  /v1/auth/signup:
    post:
      tags:
        - auth
      summary: Signup User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - phone
                - password
                - first_name
                - last_name
                - middle_name
                - inn
                - is_contractor
              properties:
                email:
                  type: string
                  format: email
                phone:
                  type: string
                  format: phone
                  pattern: ^\+?\d{10,14}$
                password:
                  type: string
                  format: password
                  pattern: ^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$
                first_name:
                  type: string
                  minLength: 3
                  pattern: ^[а-яА-ЯёЁ]+$
                  example: Иван
                last_name:
                  type: string
                  minLength: 3
                  pattern: ^[а-яА-ЯёЁ]+$
                  example: Иванов
                middle_name:
                  type: string
                  minLength: 3
                  pattern: ^[а-яА-ЯёЁ]+$
                  example: Иванович
                avatar_url:
                  type: string
                  pattern: ^https?:\/\/[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*)$
                  example: https://s3.ubrato.ru/qwerty
                inn:
                  type: string
                  pattern: ^\d{10,12}$
                is_contractor:
                  type: boolean
      responses:
        '201':
          description: Success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: refresh_token=7ff581a1-4dcf-4f53-a9cb-0ef408d4a7bb; Path=/; Max-Age=1727209098; HttpOnly; Secure; SameSite=Lax
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                properties:
                  access_token:
                    type: string
        default:
          $ref: '#/components/responses/Error'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
        - details
      properties:
        code:
          type: string
          description: application-specific error code
          example: ERR_INTERNAL
        message:
          type: string
          description: error message
          example: invalid email
        details:
          type: object
          additionalProperties: true
    WrappedError:
      type: object
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/Error'
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WrappedError'

openapi: 3.0.3
info:
  title: Ubrato core
  description: ubrato core oas
  version: 1.0.0
servers:
  - description: local
    url: /
  - description: dev
    url: https://api.ubrato.ru
paths:
  /v1/auth/signin:
    post:
      tags:
        - auth
      summary: Signin User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  $ref: '#/components/schemas/email'
                password:
                  $ref: '#/components/schemas/password'
      responses:
        '200':
          description: Success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: ubrato_session=7ff581a1-4dcf-4f53-a9cb-0ef408d4a7bb; Path=/; Max-Age=1727209098; HttpOnly; Secure; SameSite=Lax
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - user
                      - access_token
                    properties:
                      user:
                        $ref: '#/components/schemas/RegularUser'
                      access_token:
                        type: string
        default:
          $ref: '#/components/responses/Error'
  /v1/auth/logout:
    delete:
      tags:
        - auth
      summary: Logout User
      parameters:
        - name: ubrato_session
          in: cookie
          required: true
          description: The session ID for the user.
          schema:
            type: string
      security:
        - cookieAuth: []
      description: Terminates the user session.
      responses:
        '204':
          description: Success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: ubrato_session=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly; Secure; SameSite=Lax
        default:
          $ref: '#/components/responses/Error'
  /v1/auth/signup:
    post:
      tags:
        - auth
      summary: Signup User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - phone
                - password
                - first_name
                - last_name
                - inn
                - is_contractor
              properties:
                email:
                  $ref: '#/components/schemas/email'
                phone:
                  $ref: '#/components/schemas/phone'
                password:
                  $ref: '#/components/schemas/password'
                first_name:
                  $ref: '#/components/schemas/name'
                last_name:
                  $ref: '#/components/schemas/name'
                middle_name:
                  $ref: '#/components/schemas/name'
                avatar_url:
                  $ref: '#/components/schemas/url'
                inn:
                  $ref: '#/components/schemas/inn'
                is_contractor:
                  type: boolean
      responses:
        '201':
          description: Success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: ubrato_session=7ff581a1-4dcf-4f53-a9cb-0ef408d4a7bb; Path=/; Max-Age=1727209098; HttpOnly; Secure; SameSite=Lax
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - user
                      - access_token
                    properties:
                      user:
                        $ref: '#/components/schemas/RegularUser'
                      access_token:
                        type: string
        default:
          $ref: '#/components/responses/Error'
  /v1/auth/user:
    get:
      tags:
        - auth
      summary: Get currently authenticated user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/RegularUser'
        default:
          $ref: '#/components/responses/Error'
  /v1/auth/refresh:
    post:
      tags:
        - auth
      summary: Get new access token
      parameters:
        - name: ubrato_session
          in: cookie
          required: true
          description: The session ID for the user.
          schema:
            type: string
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Success
          headers:
            Set-Cookie:
              schema:
                type: string
                example: ubrato_session=7ff581a1-4dcf-4f53-a9cb-0ef408d4a7bb; Path=/; Max-Age=1727209098; HttpOnly; Secure; SameSite=Lax
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - user
                      - access_token
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      access_token:
                        type: string
        default:
          $ref: '#/components/responses/Error'
  /v1/tenders:
    get:
      tags:
        - tenders
      summary: Get tenders
      description: |-
        Returns all tenders

        Для получения всех тендеров (включая неверифицированные)
        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: verified
          in: query
          description: Фильтрует результат и включает только верифицированные тендеры.
          schema:
            type: boolean
            default: true
        - name: offset
          in: query
          description: Сдвиг начала каждой страницы на указанное количество единиц.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Максимальное количество объектов, которое может вернуть запрос.
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 100
        - name: sort
          in: query
          description: Определяет атрибут, по которому сортируются элементы.
          schema:
            type: string
            enum:
              - id
            default: id
        - name: direction
          in: query
          description: |-
            Направление сортировки результатов.
            Это может быть либо сортировка по возрастанию (ASC), либо сортировка по убыванию (DESC).
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tender'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - tenders
      summary: Create tender
      description: Creates a new tender
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - city
                - price
                - is_contract_price
                - is_nds_price
                - floor_space
                - services
                - objects
                - reception_start
                - reception_end
                - work_start
                - work_end
              properties:
                name:
                  type: string
                city:
                  type: integer
                price:
                  type: number
                is_contract_price:
                  type: boolean
                is_nds_price:
                  type: boolean
                floor_space:
                  type: integer
                description:
                  type: string
                wishes:
                  type: string
                specification:
                  $ref: '#/components/schemas/url'
                attachments:
                  type: array
                  items:
                    $ref: '#/components/schemas/url'
                  maxItems: 8
                services:
                  type: array
                  items:
                    type: integer
                objects:
                  type: array
                  items:
                    type: integer
                is_draft:
                  type: boolean
                  default: false
                reception_start:
                  type: string
                  format: date-time
                  description: дата начала приема заявок
                reception_end:
                  type: string
                  format: date-time
                  description: дата окончания приема заявок
                work_start:
                  type: string
                  format: date-time
                work_end:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Tender'
        default:
          $ref: '#/components/responses/Error'
  /v1/tenders/verifications:
    get:
      tags:
        - tenders
      summary: Get verification requests
      description: |-
        Get verifications

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          description: Фильтрует результат по статусам.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/verification_status'
        - name: offset
          in: query
          description: Сдвиг начала каждой страницы на указанное количество единиц.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Максимальное количество объектов, которое может вернуть запрос.
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 100
        - name: sort
          in: query
          description: Определяет атрибут, по которому сортируются элементы.
          schema:
            type: string
            enum:
              - id
            default: id
        - name: direction
          in: query
          description: |-
            Направление сортировки результатов.
            Это может быть либо сортировка по возрастанию (ASC), либо сортировка по убыванию (DESC).
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VerificationRequest'
        default:
          $ref: '#/components/responses/Error'
  /v1/tenders/{tenderID}:
    get:
      tags:
        - tenders
      summary: Get tender by id
      description: |-
        Returns tender by id

        Для получения неверифицированного тендера
        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: tenderID
          required: true
          in: path
          description: ID of tender
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Tender'
        default:
          $ref: '#/components/responses/Error'
    put:
      tags:
        - tenders
      summary: Update tender by id
      security:
        - bearerAuth: []
      parameters:
        - name: tenderID
          required: true
          in: path
          description: ID of tender
          schema:
            type: integer
            minimum: 1
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                city:
                  type: integer
                price:
                  type: number
                is_contract_price:
                  type: boolean
                is_nds_price:
                  type: boolean
                floor_space:
                  type: integer
                description:
                  type: string
                wishes:
                  type: string
                specification:
                  $ref: '#/components/schemas/url'
                attachments:
                  type: array
                  items:
                    $ref: '#/components/schemas/url'
                  maxItems: 8
                services:
                  type: array
                  items:
                    type: integer
                objects:
                  type: array
                  items:
                    type: integer
                is_draft:
                  type: boolean
                  default: false
                reception_start:
                  type: string
                  format: date-time
                  description: дата начала приема заявок
                reception_end:
                  type: string
                  format: date-time
                  description: дата окончания приема заявок
                work_start:
                  type: string
                  format: date-time
                work_end:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Tender'
        default:
          $ref: '#/components/responses/Error'
  /v1/tenders/{tenderID}/comments:
    post:
      tags:
        - tenders
      summary: Send comment for tender
      description: Leaves comment under tender
      security:
        - bearerAuth: []
      parameters:
        - name: tenderID
          required: true
          in: path
          description: ID of tender
          schema:
            type: integer
            minimum: 1
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                content:
                  type: string
                attachments:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Success
        default:
          $ref: '#/components/responses/Error'
    get:
      tags:
        - tenders
      summary: Get comments
      description: Get comments under tender
      parameters:
        - name: tenderID
          required: true
          in: path
          description: ID of tender
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
        default:
          $ref: '#/components/responses/Error'
  /v1/tenders/{tenderID}/respond:
    post:
      tags:
        - tenders
      summary: Respond to a tender
      description: Responds to a tender
      security:
        - bearerAuth: []
      parameters:
        - name: tenderID
          required: true
          in: path
          description: ID of tender
          schema:
            type: integer
            minimum: 1
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - price
                - is_nds
              properties:
                price:
                  type: integer
                is_nds:
                  type: boolean
      responses:
        '200':
          description: Success
        default:
          $ref: '#/components/responses/Error'
  /v1/users:
    get:
      tags:
        - users
      summary: Get users
      description: |-
        Returns all users

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: role
          in: query
          description: Фильтрует результат по ролям пользователей.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/role'
        - name: offset
          in: query
          description: Сдвиг начала каждой страницы на указанное количество единиц.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Максимальное количество объектов, которое может вернуть запрос.
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 100
        - name: sort
          in: query
          description: Определяет атрибут, по которому сортируются элементы.
          schema:
            type: string
            enum:
              - id
            default: id
        - name: direction
          in: query
          description: |-
            Направление сортировки результатов.
            Это может быть либо сортировка по возрастанию (ASC), либо сортировка по убыванию (DESC).
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/RegularUser'
                        - $ref: '#/components/schemas/EmployeeUser'
        default:
          $ref: '#/components/responses/Error'
  /v1/users/confirm/email:
    post:
      tags:
        - users
      summary: Confirm email
      description: Confirm email use a code from mail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                user_id:
                  type: integer
                code:
                  type: string
      responses:
        '200':
          description: Success
        default:
          $ref: '#/components/responses/Error'
  /v1/users/confirm/password:
    post:
      tags:
        - users
      summary: Confirm reset password
      description: Confirm reset password use a code from mail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - password
              properties:
                user_id:
                  type: integer
                code:
                  type: string
                password:
                  $ref: '#/components/schemas/password'
      responses:
        '200':
          description: Success
        default:
          $ref: '#/components/responses/Error'
  /v1/users/request/email-verification:
    post:
      tags:
        - users
      summary: Requesting email verify code
      description: Requesting send verify code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  $ref: '#/components/schemas/email'
      responses:
        '200':
          description: Success
        default:
          $ref: '#/components/responses/Error'
  /v1/users/request/reset-password:
    post:
      tags:
        - users
      summary: Requesting reset password
      description: Requesting send reset code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  $ref: '#/components/schemas/email'
      responses:
        '200':
          description: Success
        default:
          $ref: '#/components/responses/Error'
  /v1/users/{userID}:
    get:
      tags:
        - users
      summary: Get user by id
      description: |-
        Returns user by id

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: userID
          required: true
          in: path
          description: ID of user
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/RegularUser'
        default:
          $ref: '#/components/responses/Error'
  /v1/employee:
    post:
      tags:
        - employee
      summary: Create employee user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - phone
                - password
                - first_name
                - last_name
                - role
                - position
              properties:
                email:
                  $ref: '#/components/schemas/email'
                phone:
                  $ref: '#/components/schemas/phone'
                password:
                  $ref: '#/components/schemas/password'
                first_name:
                  $ref: '#/components/schemas/name'
                last_name:
                  $ref: '#/components/schemas/name'
                middle_name:
                  $ref: '#/components/schemas/name'
                role:
                  $ref: '#/components/schemas/role'
                position:
                  type: string
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/EmployeeUser'
        default:
          $ref: '#/components/responses/Error'
  /v1/organizations/{organizationID}/tenders:
    get:
      tags:
        - organizations
      summary: Get all of organization tenders
      description: if user is in organization it also returns all drafts
      security:
        - bearerAuth: []
      parameters:
        - name: organizationID
          required: true
          in: path
          description: ID of organization
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tender'
        default:
          $ref: '#/components/responses/Error'
  /v1/organizations:
    get:
      tags:
        - organizations
      summary: Get organizations
      description: |-
        List all organizations

        Для получения всех организаций (включая неверифицированные)
        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: verified
          in: query
          description: Фильтрует результат и включает только верифицированные компании.
          schema:
            type: boolean
            default: true
        - name: offset
          in: query
          description: Сдвиг начала каждой страницы на указанное количество единиц.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Максимальное количество объектов, которое может вернуть запрос.
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 100
        - name: sort
          in: query
          description: Определяет атрибут, по которому сортируются элементы.
          schema:
            type: string
            enum:
              - id
            default: id
        - name: direction
          in: query
          description: |-
            Направление сортировки результатов.
            Это может быть либо сортировка по возрастанию (ASC), либо сортировка по убыванию (DESC).
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - organizations
                    properties:
                      organizations:
                        type: array
                        items:
                          $ref: '#/components/schemas/Organization'
        default:
          $ref: '#/components/responses/Error'
  /v1/organizations/contractors:
    get:
      tags:
        - organizations
      summary: Get contractors
      description: Получить всех исполнителей (verifed=true, banned=false)
      parameters:
        - name: offset
          in: query
          description: Сдвиг начала каждой страницы на указанное количество единиц.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Максимальное количество объектов, которое может вернуть запрос.
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 100
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Organization'
        default:
          $ref: '#/components/responses/Error'
  /v1/organizations/{organizationID}:
    get:
      tags:
        - organizations
      summary: Get organization by id
      description: Returns organization by id
      security:
        - bearerAuth: []
      parameters:
        - name: organizationID
          required: true
          in: path
          description: ID of organization
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Organization'
        default:
          $ref: '#/components/responses/Error'
  /v1/organizations/verifications:
    get:
      tags:
        - organizations
      summary: Get verification requests
      description: |-
        Get verifications

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          description: Фильтрует результат по статусам.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/verification_status'
        - name: offset
          in: query
          description: Сдвиг начала каждой страницы на указанное количество единиц.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Максимальное количество объектов, которое может вернуть запрос.
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 100
        - name: sort
          in: query
          description: Определяет атрибут, по которому сортируются элементы.
          schema:
            type: string
            enum:
              - id
            default: id
        - name: direction
          in: query
          description: |-
            Направление сортировки результатов.
            Это может быть либо сортировка по возрастанию (ASC), либо сортировка по убыванию (DESC).
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VerificationRequest'
        default:
          $ref: '#/components/responses/Error'
  /v1/organizations/{organizationID}/verifications:
    post:
      tags:
        - organizations
      summary: Send verification request
      description: Ask verify organization
      security:
        - bearerAuth: []
      parameters:
        - name: organizationID
          required: true
          in: path
          description: ID of organization
          schema:
            type: integer
            minimum: 1
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - egrul
                - company_card
                - authority_proof
                - company_constitution
              properties:
                egrul:
                  type: string
                  format: binary
                company_card:
                  type: string
                  format: binary
                authority_proof:
                  type: string
                  format: binary
                company_constitution:
                  type: string
                  format: binary
      responses:
        '200':
          description: Success
        default:
          $ref: '#/components/responses/Error'
    get:
      tags:
        - organizations
      summary: Get verification requests
      description: Get organization verification history
      security:
        - bearerAuth: []
      parameters:
        - name: organizationID
          required: true
          in: path
          description: ID of organization
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VerificationRequest'
        default:
          $ref: '#/components/responses/Error'
  /v1/verifications/{requestID}/aprove:
    post:
      tags:
        - verifications
      summary: Aprove verification request
      description: |-
        Aproving verification

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: requestID
          required: true
          in: path
          description: ID of request
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Success
        default:
          $ref: '#/components/responses/Error'
  /v1/verifications/{requestID}/deny:
    post:
      tags:
        - verifications
      summary: Deny verification request
      description: |-
        Denying verification

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: requestID
          required: true
          in: path
          description: ID of request
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Success
        default:
          $ref: '#/components/responses/Error'
  /v1/verifications/{requestID}:
    get:
      tags:
        - verifications
      summary: Get verification request by id
      description: |-
        Returns verification request by id

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: requestID
          required: true
          in: path
          description: ID of request
          schema:
            type: integer
            minimum: 1
          example: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/VerificationRequest'
        default:
          $ref: '#/components/responses/Error'
  /v1/catalog/services:
    get:
      tags:
        - catalog
      summary: Get a list of all available services
      description: Lists all available services
      security:
        - bearerAuth: []
      parameters:
        - name: offset
          in: query
          description: Сдвиг начала каждой страницы на указанное количество единиц.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Максимальное количество объектов, которое может вернуть запрос.
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 100
        - name: sort
          in: query
          description: Определяет атрибут, по которому сортируются элементы.
          schema:
            type: string
            enum:
              - id
            default: id
        - name: direction
          in: query
          description: |-
            Направление сортировки результатов.
            Это может быть либо сортировка по возрастанию (ASC), либо сортировка по убыванию (DESC).
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Services'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - catalog
      summary: Create catalog service
      description: |-
        Creates catalog service

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Admin' or higher.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Service'
        default:
          $ref: '#/components/responses/Error'
  /v1/catalog/objects:
    get:
      tags:
        - catalog
      summary: Get a list of all available objects
      description: Lists all available objects
      security:
        - bearerAuth: []
      parameters:
        - name: offset
          in: query
          description: Сдвиг начала каждой страницы на указанное количество единиц.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Максимальное количество объектов, которое может вернуть запрос.
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 100
        - name: sort
          in: query
          description: Определяет атрибут, по которому сортируются элементы.
          schema:
            type: string
            enum:
              - id
            default: id
        - name: direction
          in: query
          description: |-
            Направление сортировки результатов.
            Это может быть либо сортировка по возрастанию (ASC), либо сортировка по убыванию (DESC).
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Objects'
        default:
          $ref: '#/components/responses/Error'
    post:
      tags:
        - catalog
      summary: Create catalog object
      description: |-
        Creates catalog object

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Admin' or higher.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Object'
        default:
          $ref: '#/components/responses/Error'
  /v1/catalog/cities:
    post:
      tags:
        - catalog
      summary: Add city to catalog
      description: |-
        Adds city to catalog

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Admin' or higher.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - region_id
              properties:
                name:
                  type: string
                region_id:
                  type: integer
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - city
                    properties:
                      city:
                        $ref: '#/components/schemas/City'
        default:
          $ref: '#/components/responses/Error'
  /v1/catalog/regions:
    post:
      tags:
        - catalog
      summary: Add region to catalog
      description: |-
        Adds region to catalog

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Admin' or higher.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Region'
        default:
          $ref: '#/components/responses/Error'
  /v1/comments/verifications:
    get:
      tags:
        - comments
      summary: Get verification requests
      description: |-
        Get all verifications requests

        **[Role](https://youtrack.ubrato.ru/articles/UBR-A-7/Roli-privilegii) required**:
        'Employee' or higher.
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          description: Фильтрует результат по статусам.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/verification_status'
        - name: offset
          in: query
          description: Сдвиг начала каждой страницы на указанное количество единиц.
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Максимальное количество объектов, которое может вернуть запрос.
          schema:
            type: integer
            minimum: 0
            maximum: 100
            default: 100
        - name: sort
          in: query
          description: Определяет атрибут, по которому сортируются элементы.
          schema:
            type: string
            enum:
              - id
            default: id
        - name: direction
          in: query
          description: |-
            Направление сортировки результатов.
            Это может быть либо сортировка по возрастанию (ASC), либо сортировка по убыванию (DESC).
          schema:
            type: string
            enum:
              - ASC
              - DESC
            default: ASC
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VerificationRequest'
        default:
          $ref: '#/components/responses/Error'
  /v1/survey:
    post:
      tags:
        - survey
      summary: Respond to a survey
      security:
        - {}
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
                - phone
                - question
              properties:
                name:
                  type: string
                type:
                  $ref: '#/components/schemas/survey'
                phone:
                  $ref: '#/components/schemas/phone'
                question:
                  type: string
      responses:
        '200':
          description: Success
        default:
          $ref: '#/components/responses/Error'
  /v1/suggest/company:
    get:
      tags:
        - suggest
      summary: Suggest company
      description: Suggests a company with provided INN
      parameters:
        - name: inn
          required: true
          in: query
          description: INN of a company
          schema:
            $ref: '#/components/schemas/inn'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
        default:
          $ref: '#/components/responses/Error'
  /v1/suggest/city:
    get:
      tags:
        - suggest
      summary: Suggest city
      description: Suggests a city with provided city name
      parameters:
        - name: name
          required: false
          in: query
          description: name of a city
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/City'
        default:
          $ref: '#/components/responses/Error'
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: ubrato_session
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    email:
      type: string
      format: email
      example: example@ubrato.ru
    password:
      type: string
      format: password
      pattern: ^(?=.*[A-Za-z])(?=.*\d)(?=.*[!@#$%^&*])?[A-Za-z\d!@#$%^&*]{8,52}$
    Error:
      type: object
      required:
        - code
        - message
        - details
      properties:
        code:
          type: string
          description: application-specific error code
          example: ERR_INTERNAL
        message:
          type: string
          description: error message
          example: invalid email
        details:
          type: object
          additionalProperties: true
    WrappedError:
      type: object
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/Error'
    phone:
      type: string
      format: phone
      pattern: ^\+?\d{10,14}$
    name:
      type: string
      minLength: 1
      pattern: ^[а-яА-ЯёЁ]+$
      example: Абоба
    url:
      type: string
      pattern: ^https?:\/\/[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*)$
      example: https://s3.ubrato.ru/qwerty
    User:
      type: object
      required:
        - id
        - email
        - phone
        - first_name
        - last_name
        - email_verified
        - role
        - is_banned
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        email:
          $ref: '#/components/schemas/email'
        phone:
          $ref: '#/components/schemas/phone'
        first_name:
          $ref: '#/components/schemas/name'
        last_name:
          $ref: '#/components/schemas/name'
        middle_name:
          $ref: '#/components/schemas/name'
        avatar_url:
          $ref: '#/components/schemas/url'
        email_verified:
          type: boolean
        is_banned:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    inn:
      type: string
      pattern: ^\d{10,12}$
      example: 7707083893
    okpo:
      type: string
      pattern: ^\d{8}$|^\d{10}$|^\d{14}$
    ogrn:
      type: string
      pattern: ^\d{13}$
      example: 1027700132195
    kpp:
      type: string
      pattern: ^\d{9}$
      example: 773601001
    tax_code:
      type: string
      pattern: ^\d+$
      example: '7736'
    ContactInfo:
      type: object
      required:
        - contact
        - info
      properties:
        contact:
          type: string
          minLength: 1
        info:
          type: string
          minLength: 1
    verification_status:
      type: string
      enum:
        - unverified
        - in_review
        - declined
        - approved
    CustomerInfo:
      type: object
      required:
        - todo
      properties:
        todo:
          type: string
    ContractorInfo:
      type: object
      required:
        - todo
      properties:
        todo:
          type: string
    Organization:
      type: object
      required:
        - id
        - brand_name
        - full_name
        - short_name
        - inn
        - okpo
        - ogrn
        - kpp
        - tax_code
        - verified
        - is_contractor
        - is_banned
        - address
        - emails
        - phones
        - messengers
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        brand_name:
          $ref: '#/components/schemas/name'
        full_name:
          $ref: '#/components/schemas/name'
        short_name:
          $ref: '#/components/schemas/name'
        inn:
          $ref: '#/components/schemas/inn'
        okpo:
          $ref: '#/components/schemas/okpo'
        ogrn:
          $ref: '#/components/schemas/ogrn'
        kpp:
          $ref: '#/components/schemas/kpp'
        tax_code:
          $ref: '#/components/schemas/tax_code'
        address:
          type: string
          example: 117312, г Москва, Академический р-н, ул Вавилова, д 19
        avatar_url:
          $ref: '#/components/schemas/url'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/ContactInfo'
        phones:
          type: array
          items:
            $ref: '#/components/schemas/ContactInfo'
        messengers:
          type: array
          items:
            $ref: '#/components/schemas/ContactInfo'
        verification_status:
          $ref: '#/components/schemas/verification_status'
        is_contractor:
          type: boolean
        is_banned:
          type: boolean
        customer_info:
          $ref: '#/components/schemas/CustomerInfo'
        contractor_info:
          $ref: '#/components/schemas/ContractorInfo'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    RegularUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          required:
            - organization
          properties:
            organization:
              $ref: '#/components/schemas/Organization'
    Region:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
          example: Москва и Московская область
    City:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
          example: Москва
        region:
          $ref: '#/components/schemas/Region'
    Service:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        parent_id:
          type: integer
        name:
          type: string
    Services:
      type: array
      items:
        $ref: '#/components/schemas/Service'
    Object:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        parent_id:
          type: integer
        name:
          type: string
    Objects:
      type: array
      items:
        $ref: '#/components/schemas/Object'
    Tender:
      type: object
      required:
        - id
        - organization
        - name
        - city
        - price
        - is_contract_price
        - is_nds_price
        - is_draft
        - floor_space
        - description
        - wishes
        - specification
        - attachments
        - services
        - objects
        - status
        - reception_start
        - reception_end
        - work_start
        - work_end
        - created_at
        - updated_at
      properties:
        id:
          type: integer
        organization:
          $ref: '#/components/schemas/Organization'
        winner_organization:
          $ref: '#/components/schemas/Organization'
        name:
          type: string
        city:
          $ref: '#/components/schemas/City'
        price:
          type: number
        is_contract_price:
          type: boolean
        is_nds_price:
          type: boolean
        is_draft:
          type: boolean
        floor_space:
          type: integer
        description:
          type: string
        wishes:
          type: string
        specification:
          $ref: '#/components/schemas/url'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/url'
          maxItems: 8
        services:
          $ref: '#/components/schemas/Services'
        objects:
          $ref: '#/components/schemas/Objects'
        status:
          type: string
        verification_status:
          $ref: '#/components/schemas/verification_status'
        reception_start:
          type: string
          format: date-time
          description: дата начала приема заявок
        reception_end:
          type: string
          format: date-time
          description: дата окончания приема заявок
        work_start:
          type: string
          format: date-time
        work_end:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    role:
      type: string
      enum:
        - user
        - employee
        - admin
        - super_admin
    EmployeeUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          required:
            - position
          properties:
            position:
              type: string
            role:
              $ref: '#/components/schemas/role'
    object_type:
      type: string
      enum:
        - invalid
        - organization
        - comment
        - tender
    Comment:
      type: object
      required:
        - id
        - organization
        - title
        - content
        - verification_status
        - created_at
      properties:
        id:
          type: integer
        organization:
          $ref: '#/components/schemas/Organization'
        title:
          type: string
        content:
          type: string
        attachments:
          type: array
          items:
            type: string
        verification_status:
          type: string
        created_at:
          type: string
          format: date-time
    VerificationRequest:
      type: object
      required:
        - id
        - object_type
        - object
        - content
        - attachments
        - status
        - created_at
      properties:
        id:
          type: integer
        reviewer:
          $ref: '#/components/schemas/EmployeeUser'
        object_type:
          $ref: '#/components/schemas/object_type'
        object:
          oneOf:
            - $ref: '#/components/schemas/Comment'
            - $ref: '#/components/schemas/Tender'
            - $ref: '#/components/schemas/Organization'
        content:
          type: string
        attachments:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/verification_status'
        review_comment:
          type: string
        created_at:
          type: string
          format: date-time
        reviewed_at:
          type: string
          format: date-time
    survey:
      type: string
      enum:
        - SURVEY_TYPE_REGISTRATION
        - SURVEY_TYPE_VERIFICATION
        - SURVEY_TYPE_FEEDBACK
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WrappedError'
